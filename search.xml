<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前端学习笔记</title>
    <url>/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>不罗嗦，直接上干货！</p>
<h3 id="HTML-5"><a href="#HTML-5" class="headerlink" title="HTML ~ 5"></a>HTML ~ 5</h3><h4 id="1、基础知识"><a href="#1、基础知识" class="headerlink" title="1、基础知识"></a>1、基础知识</h4><h5 id="1-1、常见的标签"><a href="#1-1、常见的标签" class="headerlink" title="1.1、常见的标签"></a>1.1、常见的标签</h5><table>
<thead>
<tr>
<th align="center">常用标签名称</th>
<th align="center">标签</th>
</tr>
</thead>
<tbody><tr>
<td align="center">标题</td>
<td align="center"><code>&lt;h1&gt;&lt;/h1&gt; ~~ &lt;h6&gt;&lt;/h6&gt;</code></td>
</tr>
<tr>
<td align="center">段落</td>
<td align="center"><code>&lt;p&gt;&lt;/p&gt;</code></td>
</tr>
<tr>
<td align="center">水平线</td>
<td align="center"><code>&lt;hr /&gt;</code></td>
</tr>
<tr>
<td align="center">换行</td>
<td align="center"><code>&lt;br /&gt;</code></td>
</tr>
<tr>
<td align="center">文本格式化</td>
<td align="center"><code>&lt;pre&gt;&lt;/pre&gt;</code></td>
</tr>
<tr>
<td align="center">文字斜体</td>
<td align="center"><code>&lt;i&gt;&lt;/i&gt;</code>、<code>&lt;em&gt;&lt;/em&gt;</code></td>
</tr>
<tr>
<td align="center">加粗</td>
<td align="center"><code>&lt;b&gt;&lt;/b&gt;</code>、<code>&lt;strong&gt;&lt;/strong&gt;</code></td>
</tr>
<tr>
<td align="center">下标、上标</td>
<td align="center"><code>&lt;sub&gt;</code> 、<code>&lt;sup&gt;</code></td>
</tr>
<tr>
<td align="center">下划线</td>
<td align="center"><code>&lt;ins&gt;</code></td>
</tr>
<tr>
<td align="center">删除线</td>
<td align="center"><code>&lt;del&gt;</code></td>
</tr>
</tbody></table>
<p><strong>注意：</strong>关于标签这一块，不做过多的列举。具体请看：<a href="https://www.w3school.com.cn/index.html">W3C</a></p>
<h5 id="1-2、表格"><a href="#1-2、表格" class="headerlink" title="1.2、表格"></a>1.2、表格</h5><p><strong>注意：</strong>不适合页面布局，适合数据布局</p>
<p>表格的基本结构：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表格开始 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 表格标题，居中显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>...<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tr 行标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 表格头，内容剧中，加粗显示 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>......<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- td 单元格 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>......<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            ......</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>......<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            ......</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表格结束 --&gt;</span></span><br></pre></td></tr></table></figure>

<p>表格结构划分：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>...<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 表格的头（放标题之类的内容） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 表格的主体（放数据主体） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 表格的脚（放表格的脚注） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>脚注<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>表格操作：合并单元格</p>
<ul>
<li>跨行合并：rowspan</li>
<li>跨列合并：colspan</li>
<li>合并思想：将多个内容合并的时候，就会有多于的东西，把它删掉</li>
<li>合并公式：删除的个数 = 合并的个数 – 1</li>
<li>合并顺序：先上 后下 先左 后右</li>
</ul>
<h5 id="1-3、列表"><a href="#1-3、列表" class="headerlink" title="1.3、列表"></a>1.3、列表</h5><p>列表主要有：有序列表、无序列表和自定义列表</p>
<p>有序列表：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span>    </span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>无序列表：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span>    </span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>自定义列表：标题+描述内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>定义列表项<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表项描叙<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>定义列表项<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表项描述<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>1、自定义列表中，多个 dd 对应一个 dt；2、建议有序、无序标签后只放 li 标签，其它标签放 li 内</p>
<h5 id="1-4、表单"><a href="#1-4、表单" class="headerlink" title="1.4、表单"></a>1.4、表单</h5><p>通过一个注册案例直接学习表单，简单明了，通俗易懂。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  form: 表单域标签</span></span><br><span class="line"><span class="comment">  input: 重点，具体查看官方文档</span></span><br><span class="line"><span class="comment">  label: 作用是增加用户体验，for 属性规定与哪个表单元素绑定（for 属性值 = 表单元素 id 的属性值）</span></span><br><span class="line"><span class="comment">  textarea: 多行文本域标签</span></span><br><span class="line"><span class="comment">  select: 下拉菜单（可通过 optgroup 进行分组）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">alian</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">caption</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/man.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;男&quot;</span>&gt;</span> 男</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/women.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;女&quot;</span>&gt;</span> 女</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>生日<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;请选择年&quot;</span>&gt;</span>请选择年<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1990&quot;</span>&gt;</span>1990<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1991&quot;</span>&gt;</span>1991<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;请选择月&quot;</span>&gt;</span>请选择月<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;请选择日&quot;</span>&gt;</span>请选择日<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;01&quot;</span>&gt;</span>01<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;02&quot;</span>&gt;</span>02<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>所在地区<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;湖南&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>婚姻状况<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;status&quot;</span>&gt;</span> 已婚</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;status&quot;</span>&gt;</span> 未婚</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>学历<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;本科&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>月薪<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;999999999&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18888888888&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>昵称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王富贵&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>喜欢的类型<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lolita&quot;</span>&gt;</span>萝莉</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;charming&quot;</span>&gt;</span>妩媚</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sexy&quot;</span>&gt;</span>性感</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ripe&quot;</span>&gt;</span>成熟</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;yangboy&quot;</span>&gt;</span>小鲜肉</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;styleman&quot;</span>&gt;</span>型男</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>自我介绍<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;introduce&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span>你是个什么样子的人？<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;免费注册&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我同意注册条款<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="1-5、三大标签"><a href="#1-5、三大标签" class="headerlink" title="1.5、三大标签"></a>1.5、三大标签</h5><blockquote>
<p>块级标签：独占一行，可设置宽高等属性</p>
</blockquote>
<p>常见：h1~h6，p，div，ul，ol， li 等</p>
<p>特点：</p>
<ul>
<li>总是从新行开始</li>
<li>高度、行高、外边距以及内边距等都是可以控制</li>
<li>宽度默认是容器的 100%</li>
<li>可以容纳内联元素和其它块级元素</li>
</ul>
<blockquote>
<p>行内标签：不占独立区域，不可设置宽高等属性</p>
</blockquote>
<p>常见：a，span，del，em，strong，ins 等</p>
<p>特点：</p>
<ul>
<li>和相邻行内元素在一行上</li>
<li>宽、高无效，但水平方向的 padding 和 margin 可以设置，垂直方向的无效</li>
<li>默认宽度就是它本身内容的宽度</li>
<li>行内元素只能容纳文本或其它行内元素</li>
</ul>
<blockquote>
<p>行内块标签：可设置宽高等</p>
</blockquote>
<p>常见：img，input，td 等</p>
<p>特点：</p>
<ul>
<li><p>和相邻行内（行内块）元素在一行上，但是之间会有空白缝隙</p>
</li>
<li><p>默认宽度就是它本身内容的宽度</p>
</li>
<li><p>高度、行高、外边距以及内边距等都是可以控制</p>
</li>
</ul>
<blockquote>
<p>三者之间的转换方式</p>
</blockquote>
<ul>
<li><p>块转行内：display: inline</p>
</li>
<li><p>行内转块：display: block</p>
</li>
<li><p>块、行内转行内块：display: inline-block</p>
</li>
</ul>
<h5 id="1-6、语义化标签"><a href="#1-6、语义化标签" class="headerlink" title="1.6、语义化标签"></a>1.6、语义化标签</h5><table>
<thead>
<tr>
<th align="center">标签</th>
<th align="center">语义化含义</th>
<th align="center">标签</th>
<th align="center">语义化含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">header</td>
<td align="center">头部</td>
<td align="center">nav</td>
<td align="center">导航</td>
</tr>
<tr>
<td align="center">article</td>
<td align="center">内容</td>
<td align="center">section</td>
<td align="center">块级</td>
</tr>
<tr>
<td align="center">aside</td>
<td align="center">侧边栏</td>
<td align="center">footer</td>
<td align="center">尾部</td>
</tr>
</tbody></table>
<p><strong>注意：</strong>在 <code>IE9</code> 浏览器中，需要把语义化标签都转换为 <code>块级元素</code></p>
<h5 id="1-7、多媒体标签"><a href="#1-7、多媒体标签" class="headerlink" title="1.7、多媒体标签"></a>1.7、多媒体标签</h5><h6 id="1-7-1、audio-音频"><a href="#1-7-1、audio-音频" class="headerlink" title="1.7.1、audio - 音频"></a>1.7.1、audio - 音频</h6><blockquote>
<p>支持格式：ogg、mp3 和 wav</p>
</blockquote>
<ul>
<li><p>兼容性问题处理</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 不同浏览器支持不同的格式，所以我们采取的方案是这个音频准备多个文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./media/snow.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多个 source,多个音频文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h6 id="1-7-2、video-视频"><a href="#1-7-2、video-视频" class="headerlink" title="1.7.2、video - 视频"></a>1.7.2、video - 视频</h6><blockquote>
<p>支持格式：ogg、mp4 和 webm</p>
</blockquote>
<ul>
<li>兼容性问题处理（同 audio）</li>
</ul>
<h6 id="1-7-3、总结"><a href="#1-7-3、总结" class="headerlink" title="1.7.3、总结"></a>1.7.3、总结</h6><ul>
<li>音频标签与视频标签使用基本一致</li>
<li>在不同浏览器下情况不同，存在兼容性问题</li>
<li>谷歌浏览器把音频和视频标签的自动播放都禁止了，添加 <code>muted</code> 标签可以自己播放</li>
</ul>
<h3 id="CSS-3"><a href="#CSS-3" class="headerlink" title="CSS ~ 3"></a>CSS ~ 3</h3><h4 id="1、基础知识-1"><a href="#1、基础知识-1" class="headerlink" title="1、基础知识"></a>1、基础知识</h4><h5 id="1-1、样式引用"><a href="#1-1、样式引用" class="headerlink" title="1.1、样式引用"></a>1.1、样式引用</h5><p>样式引用的优先级：行内 &gt; 内部 &gt; 导入/链入外部样式</p>
<p><strong>注意：</strong>链入外部样式采取就近原则（近 html 元素：即近 <code>&lt;body&gt;</code> ）</p>
<ul>
<li><p>内部样式（嵌入样式）：写在<code>&lt;head&gt;&lt;/head&gt;</code>标签内</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;内部样式&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>样式加载：与 html 文件同时加载</p>
</li>
<li><p>行内样式：在开始标签内添加 style 样式属性</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;p style=&quot;color:red;&quot;&gt;内容&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>样式加载：与 html 文件同时加载</p>
</li>
<li><p>外部样式：把 css 样式代码写在独立的一个文件中，再将这个 xx.css 文件引入 html 中</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;link href=&quot;xx.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;</span><br></pre></td></tr></table></figure>

<p>样式加载：与 html 文件同时加载</p>
</li>
<li><p>导入式：@import</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    <span class="keyword">@import</span> url(<span class="string">&quot;xx.css&quot;</span>);    <span class="comment">/* 位于 style 中第一行 */</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>样式加载：html 文件加载完，再加载样式</p>
</li>
</ul>
<h5 id="1-2、选择器"><a href="#1-2、选择器" class="headerlink" title="1.2、选择器"></a>1.2、选择器</h5><p>关于 CSS 的选择器不做过多赘述，详情具体参见：<a href="https://www.w3school.com.cn/css/index.asp">CSS 选择器</a></p>
<ul>
<li><p>属性选择器</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 选择具有 disabled 属性的 button 元素 */</span></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-attr">[disabled]</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: default</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择具有 type 属性且属性值等于 search 的元素 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=search]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 匹配具有 class 属性且属性值以 black 开头的元素 */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-attr">[class^=black]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: lightgreen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 匹配具有 class 属性且属性值以 black 结尾的元素 */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-attr">[class$=black]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: lightsalmon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 匹配具有 class 属性且属性值中含有 black 的元素 */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-attr">[class*=black]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: lightseagreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>结构伪类选择器</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 匹配父元素中的第一个子元素 li */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightseagreen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 匹配父元素中的最后一个 li 元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightcoral;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 匹配父元素中第 n 个子元素 li */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * nth-child(n) 详解</span></span><br><span class="line"><span class="comment"> * 1、本质上就是选中第 n 个子元素</span></span><br><span class="line"><span class="comment"> * 2、n: 可以是数字、关键字、公式</span></span><br><span class="line"><span class="comment"> * 3、n: 如果是数字，就是选中第几个</span></span><br><span class="line"><span class="comment"> * 4、常见的关键字: even 偶数、odd 奇数</span></span><br><span class="line"><span class="comment"> * 5、常见公式(如果 n 是公式，则从 0 开始计算)</span></span><br><span class="line"><span class="comment"> *   2n、2n+1、5n ...</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * nt-of-type: 选择指定类型的元素</span></span><br><span class="line"><span class="comment"> * nth-child: 选择父元素里面的第几个子元素，不管是第几个类型</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>伪元素选择器</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ::before: 在元素内部的前面插入内容</span></span><br><span class="line"><span class="comment"> * ::after: 在元素内部的后面插入内容</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意事项：</span></span><br><span class="line"><span class="comment"> * 1、必须有 content 属性</span></span><br><span class="line"><span class="comment"> * 2、创建的是一个元素，但是属于行内元素</span></span><br><span class="line"><span class="comment"> * 3、权重: 1</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 添加字体图标 */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">1px</span> solid lightseagreen;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;\ea50&#x27;</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>兄弟选择器</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * + : 选中相邻的一个</span></span><br><span class="line"><span class="comment"> * ~ : 选中相邻的全部</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">.first + li &#123;…&#125;</span><br><span class="line"></span><br><span class="line">.first ~ li &#123;…&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-3、三大特性"><a href="#1-3、三大特性" class="headerlink" title="1.3、三大特性"></a>1.3、三大特性</h5><p>层叠性：样式冲突，以最后书写样式为准</p>
<ul>
<li>口诀：长江后浪推前浪，前浪死在沙滩上</li>
</ul>
<p>继承性：子标签继承父标签的部分样式</p>
<ul>
<li>特点：color 和 text-，font-，line- 开头的均可继承</li>
<li>理解：子承父业</li>
<li>优点：简化代码，降低 css 样式的复杂性</li>
<li>口诀：龙生龙，凤生凤，老鼠的儿子生来会打洞</li>
</ul>
<p>优先级</p>
<ul>
<li><p>!important 声明最高</p>
</li>
<li><p>行内样式 &gt; 内部样式 &gt; 外部样式</p>
</li>
<li><p>ID选择器 &gt; class选择器 &gt; 标签选择器 &gt; 通配符</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 原则：权值相同，就近原则；不同，高者优先</span></span><br><span class="line"><span class="comment"> * 权值规则</span></span><br><span class="line"><span class="comment"> *   1、统计不同选择器的个数</span></span><br><span class="line"><span class="comment"> *   2、每类选择器的个数乘以相应权值</span></span><br><span class="line"><span class="comment"> *   3、把所有的值相加得出选择器的权值</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">#main div.warning h2 &#123;…&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Id:1         class:1        标签:2</span></span><br><span class="line"><span class="comment"> * 1*100=100    1*10=10        2*1=2</span></span><br><span class="line"><span class="comment"> * 权值：100 + 10 + 2 = 112</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-4、盒子模型"><a href="#1-4、盒子模型" class="headerlink" title="1.4、盒子模型"></a>1.4、盒子模型</h5><p>盒子模型是 CSS 三大必须精通的模块之一</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200728233036.png"></p>
<blockquote>
<p>属性介绍</p>
</blockquote>
<p>宽度：width    |    高度：height</p>
<p>最大宽度：max-width    |    最小宽度：min-width</p>
<p>边框缩写：border: 宽度 样式 颜色    |    圆角边框：border-radius</p>
<p>内边距：值不能设置负值</p>
<ul>
<li><p>padding: 值1     // 四个方向都为 值1</p>
</li>
<li><p>padding: 值1    值2    // 上下 = 值1，左右 = 值2</p>
</li>
<li><p>padding: 值1    值2    值3    // 上 = 值1，左右 = 值2，下 = 值3</p>
</li>
<li><p>padding: 值1    值2    值3    值4    // 上 = 值1，右 = 值2，下 = 值3， 左 = 值4</p>
</li>
</ul>
<p>外边距：值可正可负（值设置同 padding）</p>
<blockquote>
<p>盒模型的种类</p>
</blockquote>
<p>CSS 3 中为了优化盒模型，解决宽度偏差带来的错位问题，可以通过 box-sizing 来指定盒模型</p>
<p>方式：通过指定 content-box、border-box 来改变盒子大小的计算方式</p>
<ul>
<li><p>W3C 标准盒模型：content-box，width 和 height = 内容的宽高</p>
</li>
<li><p>CSS3 盒模型：border-box，width 和 height = 内容的宽度 + border 和 padding</p>
</li>
</ul>
<p><strong>注意：</strong>CSS3 盒模型中，如果添加了padding和border,那么真正放置内容的区域会减小</p>
<p>优缺点：</p>
<ul>
<li>标准盒模型，增加了像素的计算负担，降低了开发效率</li>
<li>C3 盒模型，页面结构更加稳固</li>
</ul>
<blockquote>
<p>常见问题</p>
</blockquote>
<p>问题一：外边距合并并引发外边距塌陷（嵌套盒子）</p>
<p>说明：垂直方向，两个相邻元素都设置外边距，外边距会发生合并，合并后外边距高度 = 两个发生合并外边距的高度中的最大值</p>
<p>外边距合并问题</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200728233255.png"></p>
<p>外边距塌陷问题</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200728233341.png"></p>
<p>解决方式：触发形成 BFC</p>
<blockquote>
<p>几个技巧</p>
</blockquote>
<p>技巧一：外边距实现盒子水平居中</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 满足两个条件:</span></span><br><span class="line"><span class="comment"> * 1、必须是块级元素</span></span><br><span class="line"><span class="comment"> * 2、盒子必须指定了宽度</span></span><br><span class="line"><span class="comment"> * 注意：文字居中，text-align: center，其中 0 为像素，可根据需求指定多少</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="selector-class">.header</span> &#123; <span class="attribute">width</span>: <span class="number">960px</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto &#125;</span><br></pre></td></tr></table></figure>

<p>技巧二：实现盒子水平垂直居中的4种方式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            line-height: 48px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            border: 1px solid lightblue;</span><br><span class="line">            background: lightcyan;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* body &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 方式 1 : 定位 1 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 缺陷：需要知道盒子的具体宽高，但盒子的宽高可能是动态的（自适应，JS控制等） */</span></span></span><br><span class="line">        /* .box &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line">            margin-top: -100px;</span><br><span class="line">            margin-left: -250px;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 方式 2 : 定位 2 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 缺陷：盒子必须得有宽高，缺一不可 */</span></span></span><br><span class="line">        /* .box &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 方式 3 : 定位 3 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 好处：不需要宽高 */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* 缺陷：兼容性不是很好 */</span></span></span><br><span class="line">        /* .box &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line">            transform: translate(-50%, -50%);</span><br><span class="line">        &#125; */</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 方式 4 : 弹性盒模型 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 缺陷：兼容性不好 */</span></span></span><br><span class="line">        body &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 原则：不谈兼容性，目前来说，基本不考虑兼容性了，那种还拿兼容说事的公司，可以不去了 */</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        box 盒子在 body 水平垂直居中</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>技巧三：关于插入图片和背景图片的处理</p>
<p>插入图片（img）</p>
<ul>
<li><p>更改大小：width 和 height</p>
</li>
<li><p>更改位置：margin 或 padding 盒模型，因为插入图片可以当作盒模型处理</p>
</li>
</ul>
<p>背景图片</p>
<ul>
<li>更改大小：background-size</li>
<li>更改位置：background-position</li>
</ul>
<h5 id="1-5、浮动"><a href="#1-5、浮动" class="headerlink" title="1.5、浮动"></a>1.5、浮动</h5><p>概念：指设置了浮动属性的元素会脱离标准流的控制，移动到其父元素中指定位置的过程</p>
<p>方式：选择器 { float: 属性值; }</p>
<ul>
<li>left: 左浮动    |    right: 右浮动    |    none: 不浮动</li>
</ul>
<p>目的：为了让多个块级元素同一行显示</p>
<p>特性：</p>
<ul>
<li><p>脱离标准流，不占位置，会影响标准流</p>
</li>
<li><p>浮动元素总是找离它最近的父级元素对齐，但不会超出内边距范围</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200728233440.png"></p>
</li>
<li><p>浮动的元素排列位置，跟上一个元素（块级）有关系</p>
<p>如果上一个元素有浮动，则 A 元素顶部会和上一个元素的顶部对齐</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200728233504.png"></p>
<p>如果上一个元素是标准流，则 A 元素顶部会和上一个元素的低部对齐</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200728233509.png"></p>
<p>结论：一个父盒子里面的子盒子，如果其中一个子级有浮动的，则其它子级都需要浮动，这样才能一行对齐显示</p>
</li>
<li><p>元素添加浮动后，元素会具有行内块元素的特性（元素添加浮动后，元素会具有行内块元素的特性来显示相应的浮动）</p>
</li>
</ul>
<p>总结：浮 | 漏 | 特</p>
<ul>
<li>浮：加了浮动的元素盒子是浮起来的，漂浮在其他的标准流盒子上面</li>
<li>漏：加了浮动的盒子，不占位置，它原来的位置给了标准流的盒子</li>
<li>特：特别注意，首先浮动的盒子需要和标准流的父级搭配使用，其次浮动可以使元素显示模式体现为行内块特性</li>
</ul>
<blockquote>
<p>清除浮动</p>
</blockquote>
<p>原理：把浮动的盒子圈到里面，让父盒子闭合出口和入口不然它们出来影响其它元素</p>
<p>本质：为了解决父级元素因为子级浮动引起内部高度为 0 的问题</p>
<p>方式：</p>
<ul>
<li><p>clear 属性：选择器 { clear: 属性值; }</p>
</li>
<li><p>额外标签法：在浮动元素末尾添加一个空标签，如：<code>&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;</code></p>
</li>
<li><p>触发 BFC</p>
</li>
<li><p>after 伪元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;.&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 兼容 IE6/7 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>content: ”.” 里面尽量跟一个小点，或者其它，尽量不要为空，否则火狐 7.0 前的版本会生成空格</p>
</li>
<li><p>before 和 after 双伪元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p>BFC</p>
</blockquote>
<p>概念：块级格式化上下文，官方话语就不多说介绍了</p>
<p>目的：形成一个完整独立的空间，让空间里的子元素不会影响到外面的布局</p>
<p>设置 CSS 样式触发 BFC：</p>
<ul>
<li>float 不为 none（就是要有浮动）</li>
<li>position 不为 relative 和 static</li>
<li>overflow 为 auto scroll 和 hidden</li>
<li>display 为 table-cell 或 inline-block</li>
</ul>
<h5 id="1-6、定位"><a href="#1-6、定位" class="headerlink" title="1.6、定位"></a>1.6、定位</h5><p>定位属性：定位模式 和 边偏移</p>
<ul>
<li>定位模式：static    |    relative    |    absolute    |    fixed</li>
<li>边偏移：top    |    bottom    |    left    |    right</li>
</ul>
<blockquote>
<p>定位模式</p>
</blockquote>
<ul>
<li><p>静态定位：static</p>
<p>指定：position: static;</p>
<p>特点：所有元素的默认定位方式，默认标准流</p>
</li>
<li><p>相对定位：relative</p>
<p>指定：position: relative;</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200801190131.png"></p>
<p>基点：以<strong>自己的左上角为基点</strong>移动（相对于自己来移动位置）</p>
<p>特点：</p>
<ul>
<li><p><strong>不脱标</strong>，盒子仍在<strong>标准流</strong>中</p>
</li>
<li><p>通过边偏移移动位置，但是<strong>原来所占的位置，继续占有</strong></p>
</li>
</ul>
</li>
<li><p>绝对定位：absolute</p>
<p>指定：position: absolute;</p>
<p>基点：</p>
<ul>
<li><p>若<strong>父级没有</strong>定位：以<strong>浏览器当前屏幕</strong>为准对齐</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200801190146.png"></p>
</li>
<li><p>若<strong>父级有</strong>定位：将依据<strong>最近的已经定位（绝对、固定或相对定位）的父元素（祖先）</strong>进行定位</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200801190154.png"></p>
</li>
</ul>
<p>特点：<strong>完全脱标，完全不占位置</strong></p>
</li>
<li><p><strong>注意：</strong>如果文档可滚动，绝对定位元素会随着它滚动，因为元素最终会相对于正常流的某一部分定位</p>
</li>
<li><p>固定定位：fixed</p>
<p>指定：position: fixed;</p>
<p>基点：以<strong>浏览器窗口作为参照物</strong></p>
<p>特点：</p>
<ul>
<li><p>固定定位的元素<strong>跟父亲没有任何关系，只认浏览器</strong></p>
</li>
<li><p>固定定位<strong>完全脱标</strong>，<strong>不占有位置</strong>，<strong>不随着滚动条滚动</strong></p>
</li>
</ul>
</li>
<li><p>叠放次序：z-index</p>
<p>概念：当对多个元素同时设置定位时，定位元素之间有可能会发生重叠</p>
<p>指定：z-index: 2</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200801190551.png"></p>
<p>说明：</p>
<ul>
<li><p>z-index 的默认值是 0，取值越大，定位元素在层叠元素中越居上</p>
</li>
<li><p>如果取值相同，则根据书写顺序，后来居上</p>
</li>
<li><p>后面数字一定不能加单位</p>
</li>
<li><p>只有相对定位，绝对定位和固定定位有此属性</p>
</li>
</ul>
</li>
<li><p>子绝父相（常用技巧）：子级是绝对定位的话，父级要用相对定位</p>
</li>
</ul>
<h4 id="2、2D-效果"><a href="#2、2D-效果" class="headerlink" title="2、2D 效果"></a>2、2D 效果</h4><h5 id="2-1、二维坐标系"><a href="#2-1、二维坐标系" class="headerlink" title="2.1、二维坐标系"></a>2.1、二维坐标系</h5><p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/article/20200801225825.png"></p>
<h5 id="2-2、阴影效果"><a href="#2-2、阴影效果" class="headerlink" title="2.2、阴影效果"></a>2.2、阴影效果</h5><p><strong>文字阴影：text-shadow: X-Offset Y-Offset Blur Color</strong></p>
<p>说明：</p>
<ul>
<li>X-Offset：阴影的水平偏移距离，其值为正值时阴影向右偏移反之向左偏移</li>
<li>Y-Offset：阴影的垂直偏移距离，其值为正值时阴影向下偏移反之向上偏移</li>
<li>Blur：阴影的模糊程度，其值不能是负值，如果值越大阴影越模糊，反之阴影越清晰，值为0则无阴影模糊</li>
<li>Color：阴影的颜色，其可以使用 rgba 色</li>
</ul>
<p><strong>边框阴影：box-shadow: h-shadow v-shadow blur spread color inset</strong></p>
<p>说明：同文字阴影</p>
<ul>
<li><p>spread：阴影的尺寸，值越大，扩散面积越大</p>
</li>
<li><p>inset：外部阴影改为内部阴影</p>
</li>
</ul>
<h5 id="2-3、圆角"><a href="#2-3、圆角" class="headerlink" title="2.3、圆角"></a>2.3、圆角</h5><h5 id="2-4、渐变"><a href="#2-4、渐变" class="headerlink" title="2.4、渐变"></a>2.4、渐变</h5><ul>
<li>线性渐变：指沿着某条直线朝一个方向产生渐变效果</li>
<li>径向渐变：从一个中心点开始沿着四周产生渐变效果</li>
</ul>
<h5 id="2-5、过渡"><a href="#2-5、过渡" class="headerlink" title="2.5、过渡"></a>2.5、过渡</h5><h5 id="2-6、变换"><a href="#2-6、变换" class="headerlink" title="2.6、变换"></a>2.6、变换</h5><h4 id="3、常见问题与技巧"><a href="#3、常见问题与技巧" class="headerlink" title="3、常见问题与技巧"></a>3、常见问题与技巧</h4><h5 id="3-1、常见问题"><a href="#3-1、常见问题" class="headerlink" title="3.1、常见问题"></a>3.1、常见问题</h5><p><strong>问题 1：</strong><code>display</code>、<code>visibility</code> 和 <code>overflow</code> 三者的区别（面试题）</p>
<ul>
<li><p>display：强调显示</p>
</li>
<li><p>display: none，隐藏对象</p>
</li>
<li><p>display: block，除了转换成块级元素之外，同时还有显示元素的意思</p>
</li>
</ul>
<p>特点：<strong>隐藏之后，不再保留位置</strong></p>
<ul>
<li>visibility：强调可见性</li>
<li>visibility: visible，显示</li>
<li>visibility: hidden，隐藏</li>
</ul>
<p>特点：<strong>隐藏之后，继续保留原有位置</strong></p>
<ul>
<li>overflow：强调溢出</li>
<li>overflow: hidden，不显示超过对象尺寸的内容，超出的部分隐藏掉</li>
</ul>
<p><strong>问题 2：</strong>为什么图片底部会有一条白色缝隙？（面试题）</p>
<p>原因：图片的默认对齐是以文字的基线对齐的</p>
<p><img src="https://cdn.jsdelivr.net/gh/HaoQiSpace/cdn/typora/20200801194833.png"></p>
<p>解决：改变图片，使得图片不与基线对齐，与底线对齐即可</p>
<h5 id="3-2、常用技巧"><a href="#3-2、常用技巧" class="headerlink" title="3.2、常用技巧"></a>3.2、常用技巧</h5><p><strong>技巧 1：</strong>溢出的文字隐藏</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3><h4 id="1、基础知识-2"><a href="#1、基础知识-2" class="headerlink" title="1、基础知识"></a>1、基础知识</h4><h5 id="1-1、兼容处理"><a href="#1-1、兼容处理" class="headerlink" title="1.1、兼容处理"></a>1.1、兼容处理</h5><blockquote>
<p>兼容移动端主流浏览器，处理 <code>Webkit</code> 内核浏览器即可</p>
</blockquote>
<h5 id="1-2、视口"><a href="#1-2、视口" class="headerlink" title="1.2、视口"></a>1.2、视口</h5><ul>
<li><p>布局视口，视觉视口 和 理想视口，重点关注：理想视口</p>
</li>
<li><p>理想视口：将布局视口的宽度，通过 <code>meta</code> 标签修改为视觉视口</p>
</li>
<li><p>代码体现</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * width: 设置宽度是设备的宽度</span><br><span class="line"> * initial-scale: 初始缩放比</span><br><span class="line"> * max/minimum: 最大最小缩放比</span><br><span class="line"> * user-scalable: 用户是否可以缩放</span><br><span class="line"> **/</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-3、二倍图"><a href="#1-3、二倍图" class="headerlink" title="1.3、二倍图"></a>1.3、二倍图</h5><ul>
<li><p>原因：一张图片放手机上显示会按照物理像素比进行缩放，所以准备的图片需要比实际需要的大 2 倍</p>
</li>
<li><p>目的：避免图片模糊</p>
</li>
<li><p>扩展：多倍图，3/4/…等倍数，具体看实际需求</p>
</li>
<li><p>目标：上述主要争对插入图，背景图看下面介绍</p>
</li>
<li><p>背景缩放</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单位: 长度|百分比|cover|contain</span></span><br><span class="line"><span class="comment"> * cover: 把背景图像扩展至足够大，以使背景图像完全覆盖背景区域</span></span><br><span class="line"><span class="comment"> * contain: 把背景图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域</span></span><br><span class="line"><span class="comment"> * 目标: 主要是正对背景图片的处理</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">background-size</span>: 背景图片宽度 背景图片高度;</span><br></pre></td></tr></table></figure>
</li>
<li><p>背景精灵图</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、将精灵图等比例缩放为原来的一半</span></span><br><span class="line"><span class="comment"> * 2、根据缩放后的精灵图进行选取测量</span></span><br><span class="line"><span class="comment"> * 3、注意: 代码里 background-size, 也要写明宽度原来的一半</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-4、开发"><a href="#1-4、开发" class="headerlink" title="1.4、开发"></a>1.4、开发</h5><ul>
<li><p>形式：移动端页面单独做（主流）或者响应式开发（费时、麻烦）</p>
</li>
<li><p>样式初始化：推荐 <code>normalize.css</code></p>
</li>
<li><p>盒模型选择</p>
<blockquote>
<p>传统模式宽度计算: 盒子的宽度 = CSS中设置的width + border + padding</p>
<p>CSS3盒子模型: 盒子的宽度=  CSS中设置的宽度width 里面包含了 border 和 padding</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*CSS3 盒子模型（IE 盒模型）*/</span></span><br><span class="line"><span class="selector-tag">box-sizing</span>: <span class="selector-tag">border-box</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*传统盒子模型（W3C 盒模型）*/</span></span><br><span class="line"><span class="selector-tag">box-sizing</span>: <span class="selector-tag">content-box</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择 */</span></span><br><span class="line">移动端可以全部使用 <span class="selector-tag">CSS3</span> 盒子模型</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">PC</span> 端如果完全需要兼容，就用传统模式，如果不考虑兼容性，就选择 <span class="selector-tag">CSS3</span> 盒子模型</span><br></pre></td></tr></table></figure>
</li>
<li><p>特殊样式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 点击高亮 设置为 transparent 完成透明 */</span></span><br><span class="line"><span class="selector-tag">-webkit-tap-highlight-color</span>: <span class="selector-tag">transparent</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 在移动端浏览器默认的外观在 iOS 上加上这个属性才能给按钮和输入框自定义样式 */</span></span><br><span class="line"><span class="selector-tag">-webkit-appearance</span>: <span class="selector-tag">none</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 禁用长按页面时的弹出菜单 */</span></span><br><span class="line"><span class="selector-tag">-webkit-touch-callout</span>: <span class="selector-tag">none</span>;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="2、页面布局"><a href="#2、页面布局" class="headerlink" title="2、页面布局"></a>2、页面布局</h4><blockquote>
<p>移动端单独制作</p>
</blockquote>
<ul>
<li><p>流式布局（百分比布局）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 100%</span><br><span class="line"><span class="comment">/* 避免因为 无限缩放/放大 而导致变形 */</span></span><br><span class="line"><span class="selector-tag">max-width</span>: 960<span class="selector-tag">px</span>（具体视情况定值）;</span><br><span class="line"><span class="selector-tag">min-width</span>: 320<span class="selector-tag">px</span>（具体视情况定值）;</span><br></pre></td></tr></table></figure>
</li>
<li><p>flex 弹性布局（强烈推荐）</p>
<blockquote>
<p>原理</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、任何一个容器 都可以指定为 flex 布局</span></span><br><span class="line"><span class="comment"> * 2、当为父盒子设为 flex 布局后，子元素的 float、clear 和 vertical-align 属性将失效</span></span><br><span class="line"><span class="comment"> * 3、采用 Flex 布局的元素，称为 Flex 容器，它的所有子元素自动成为容器成员，称为 Flex 项目</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">总结: 通过给父盒子添加<span class="selector-tag">flex</span>属性，来控制子盒子的位置和排列方式</span><br></pre></td></tr></table></figure>

<blockquote>
<p>常见父属性</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认主轴: x, 默认侧轴: y, 元素是跟着主轴来排列的</span></span><br><span class="line"><span class="comment"> * 主轴侧轴可以设置</span></span><br><span class="line"><span class="comment"> * 具体查文档</span></span><br><span class="line"><span class="comment"> * 注意: 使用之前确定好谁是主轴</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="selector-tag">flex-direction</span>: 设置主轴的方向</span><br><span class="line"><span class="selector-tag">justify-content</span>: 设置主轴上的子元素排列方式</span><br><span class="line"><span class="selector-tag">flex-wrap</span>: 设置子元素是否换行</span><br><span class="line"><span class="selector-tag">align-content</span>: 设置侧轴上的子元素的排列方式（多行）</span><br><span class="line"><span class="selector-tag">align-items</span>: 设置侧轴上的子元素排列方式（单行）</span><br><span class="line"><span class="selector-tag">flex-flow</span>: 复合属性，相当于同时设置了 <span class="selector-tag">flex-direction</span> 和 <span class="selector-tag">flex-wrap</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>常见子属性</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义子项目分配 剩余空间，用 flex 来表示占多少份数</span></span><br><span class="line"><span class="comment"> * 剩余空间: 就是若干个子盒子中除了给了固定宽度/高度之外剩余的空间</span></span><br><span class="line"><span class="comment"> * 注意: 分配的是剩余空间</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="selector-tag">flex</span>: &lt;<span class="selector-tag">number</span>&gt;; <span class="comment">/* 默认值 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性</span></span><br><span class="line"><span class="comment"> * 默认值为 auto, 表示继承父元素的 align-items 属性，如果没有父元素, 则等同于 stretch</span></span><br><span class="line"><span class="comment"> * 注意: 允许单个项目</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="selector-tag">align-self</span>: <span class="selector-tag">flex-end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义项目的排列顺序</span></span><br><span class="line"><span class="comment"> * 数值越小，排列越靠前</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="selector-tag">order</span>: &lt;<span class="selector-tag">number</span>&gt;; <span class="comment">/* 默认值 0 */</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>less + rem + 媒体查询布局</p>
<blockquote>
<p>rem 和 em</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * em: 相对于父元素字体大小</span></span><br><span class="line"><span class="comment"> * rem: 相对于根元素( html )字体大小</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10em</span>; <span class="comment">/* 10 * 12px = 120px */</span></span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10rem</span>; <span class="comment">/* 10 * 14px = 140px */</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>媒体查询</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @media开头, 注意@符号</span></span><br><span class="line"><span class="comment"> * mediatype: 媒体类型, all | print | screen</span></span><br><span class="line"><span class="comment"> * and|not|only: 关键字, 相当于 且 | 非 | 仅</span></span><br><span class="line"><span class="comment"> * media feature: 媒体特性必须有小括号包含, width | max-width | min-width</span></span><br><span class="line"><span class="comment"> * 书写规范: 从小到大 or 从大到小</span></span><br><span class="line"><span class="comment"> * 注意: 媒体类型 和 关键字 以及 媒体特性的单位 &quot;px&quot; 不能省略 </span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">@media</span> mediatype <span class="keyword">and</span>|<span class="keyword">not</span>|<span class="keyword">only</span> (media feature) &#123;</span><br><span class="line">    <span class="selector-tag">CSS-Code</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>less 基础</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、变量</span></span><br><span class="line"><span class="comment"> * 形式: @变量名: 值;</span></span><br><span class="line"><span class="comment"> * 规范: 必须有@为前缀, 不能包含特殊字符, 不能以数字开头, 大小写敏感</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">@color: pink;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2、编译</span></span><br><span class="line"><span class="comment"> * 插件: Easy LESS</span></span><br><span class="line"><span class="comment"> * 使用: 编写的 less 文件，保存便会自动生成一个同名的 css 文件</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 3、嵌套</span></span><br><span class="line"><span class="comment"> * 子元素的样式直接写到父元素里面</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">/* css 写法 */</span></span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* less 写法 */</span></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    .logo &#123;</span><br><span class="line">       <span class="selector-tag">width</span>: 300<span class="selector-tag">px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 伪类/伪元素/交集嵌套:  需要 &amp; 连接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">      <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 4、运算</span></span><br><span class="line"><span class="comment"> * 对象: 任何数字、颜色或者变量</span></span><br><span class="line"><span class="comment"> * 符号: 加（+）、减（-）、乘（*）、除（/）</span></span><br><span class="line"><span class="comment"> * 单位: 两数参与运算，相同结果取同单位, 不同则取第一个数的单位</span></span><br><span class="line"><span class="comment"> * 规则: 同数学, 先乘除后加减，有括号先算括号</span></span><br><span class="line"><span class="comment"> * 注意: 运算符中间左右有个空格隔开, 例如: 1px + 5</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">/* Less 里面写 */</span></span><br><span class="line">@witdh: 10px + 5;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: @witdh solid red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 css */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">15px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>适配方案</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方案 1</span></span><br><span class="line"><span class="comment"> * less + 媒体查询 + rem</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">动态设置 <span class="selector-tag">html</span> 标签的 <span class="selector-tag">font-size</span> 大小</span><br><span class="line">1、假设设计稿是 750<span class="selector-tag">px</span> <span class="selector-tag">-</span>&gt; 页面元素值（<span class="selector-tag">px</span>）</span><br><span class="line">2、假设我们把整个屏幕划分为 15 等份（划分标准不一可以是 20 份也可以是 10 等份）</span><br><span class="line">3、每一份作为 html 字体大小，这里就是 750px / 15 = 50px（屏幕宽度 / 划分的份数）</span><br><span class="line">4、那么在 320px 设备的时候，字体大小为 320px / 15 = 21.33px</span><br><span class="line">5、用 页面元素的大小 除以 不同的 <span class="selector-tag">html</span> 字体大小 会发现他们比例还是相同的</span><br><span class="line">比如:</span><br><span class="line">以 750<span class="selector-tag">px</span> 为标准设计稿</span><br><span class="line">一个 100*100 像素的页面元素在 750px 屏幕下, 就是 100 / 50 = 2rem, 即 2rem*2rem, 比例是 1:1</span><br><span class="line">总结:</span><br><span class="line">页面元素的 rem 值 = 页面元素值（px）/（屏幕宽度 / 划分的份数）</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方案 2（推荐）</span></span><br><span class="line"><span class="comment"> * flexible.js + rem</span></span><br><span class="line"><span class="comment"> * flexible.js: 移动端适配库</span></span><br><span class="line"><span class="comment"> * 插件: cssrem -&gt; px 转换 rem</span></span><br><span class="line"><span class="comment"> * 插件好处: 代替 less 的简便换算</span></span><br><span class="line"><span class="comment"> * 插件默认: font-size: 16px</span></span><br><span class="line"><span class="comment"> * 插件默认值改变: 点开 vs code 设置（用户区） -&gt; 更多操作 -&gt; 打开 settings.json -&gt; 配置 settings.json -&gt; 搜索 cssroot -&gt; 配置 &quot;cssrem.rootFontSize&quot;（左边不要修改）-&gt; 点击 复制到设置, 到右边修改 -&gt; 改成你需求的值 -&gt; 重启 vs code</span></span><br><span class="line"><span class="comment"> * 注意: 如果当屏幕大于 750px 的时候希望不要再去重置 html 字体, 所以要自己通过媒体查询设置一下, 并且要把权重提到最高</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">/* 媒体查询设置 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">750px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="comment">/* !important 提权到最高 */</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">75px</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">好处: 再也不需要再写不同屏幕的媒体查询</span><br><span class="line">原理: 把当前设备划分为 10 等份，但是不同设备下，比例还是一致的</span><br><span class="line">比如:</span><br><span class="line">当前设计稿是 750px, 那么只需要把 html 文字大小设置为 75px (750px / 10) 就可以</span><br><span class="line">总结:</span><br><span class="line">页面元素的 rem 值 = 页面元素值（px） / 75, 剩余的，让 flexible.js 去算</span><br></pre></td></tr></table></figure>
</li>
<li><p>混合布局</p>
</li>
</ul>
<blockquote>
<p>响应式</p>
</blockquote>
<ul>
<li>媒体查询</li>
<li>BootStrap</li>
</ul>
<h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><h4 id="1、基础语法"><a href="#1、基础语法" class="headerlink" title="1、基础语法"></a>1、基础语法</h4><h5 id="1-1、变量"><a href="#1-1、变量" class="headerlink" title="1.1、变量"></a>1.1、变量</h5><ul>
<li><p>概念：程序在内存中申请的一块用来存放数据的空间</p>
</li>
<li><p>使用及注意方面</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var [变量名] = 值（ 声明 + 赋值 + 初始化 ）</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同时声明多个变量，用 &quot;,&quot; 隔开</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 覆盖性</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">18</span>;</span><br><span class="line">x = <span class="number">81</span></span><br><span class="line"><span class="built_in">console</span>.log(x)    <span class="comment">// 81</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只声明, 不赋值</span></span><br><span class="line"><span class="keyword">var</span>  x;</span><br><span class="line"><span class="built_in">console</span>.log (x);    <span class="comment">// undefined</span></span><br><span class="line">原因: </span><br><span class="line"></span><br><span class="line"><span class="comment">// 不声明, 只赋值</span></span><br><span class="line">x = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log (x);    <span class="comment">// 10</span></span><br><span class="line">原因: </span><br><span class="line"></span><br><span class="line"><span class="comment">// 不声明, 不赋值, 直接使用</span></span><br><span class="line"><span class="built_in">console</span>.log (x);    <span class="comment">// 报错</span></span><br><span class="line">原因: </span><br></pre></td></tr></table></figure>
</li>
<li><p>命名规范</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、由字母、数字、下划线、美元符号组成;</span></span><br><span class="line"><span class="comment"> * 2、严格区分大小写;</span></span><br><span class="line"><span class="comment"> * 3、不能以数字开头;</span></span><br><span class="line"><span class="comment"> * 4、不能是关键字、保留字;</span></span><br><span class="line"><span class="comment"> * 5、变量名必须有意义;</span></span><br><span class="line"><span class="comment"> * 6、遵守驼峰命名法.</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-2、数据类型"><a href="#1-2、数据类型" class="headerlink" title="1.2、数据类型"></a>1.2、数据类型</h5><ul>
<li><p>Number</p>
<blockquote>
<p>整数、小数、负数、进制</p>
</blockquote>
<blockquote>
<p>最大值：Number.MAX_VALUE，最小值：Number.MIN_VALUE</p>
</blockquote>
<blockquote>
<p>特殊值：NaN，代表一个非数值，即非有效数字</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">注意: <span class="literal">NaN</span> 和谁都不相等，包括自己</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * isNaN([value])</span></span><br><span class="line"><span class="comment"> * 作用: 判断该值是不是一个非数字</span></span><br><span class="line"><span class="comment"> * true: 不是有效数字</span></span><br><span class="line"><span class="comment"> * false: 是有效数字</span></span><br><span class="line"><span class="comment"> * 原理: 先检测 value 是否为数字，是则输出 false，不是则进行数据类型转换后再检测</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">var</span> usrAge = <span class="number">21</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(userAge));    <span class="comment">// false，21 不是一个非数字</span></span><br><span class="line"><span class="keyword">var</span> usrName = <span class="string">&quot;andy&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(userName));    <span class="comment">// true，&quot;andy&quot; 是一个非数字</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>String</p>
<blockquote>
<p>特点：字符串型可以是引号中的 <code>任意文本</code>，其语法为：双引号 和 单引号</p>
</blockquote>
<blockquote>
<p>嵌套：外双内单，外单内双</p>
</blockquote>
<blockquote>
<p>转义符：\n …等等，具体查文档</p>
</blockquote>
<blockquote>
<p>长度：String(定义的字符串).length</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拼接</span></span><br><span class="line"><span class="comment"> * 形式: 使用 + 进行拼接，字符串 + 任何类型 = 拼接之后的新字符串</span></span><br><span class="line"><span class="comment"> * 辨析 + 口诀: 数值相加，字符相连</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">alert(<span class="string">&#x27;hello&#x27;</span> + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;world&#x27;</span>); <span class="comment">// hello world</span></span><br><span class="line">alert(<span class="string">&#x27;100&#x27;</span> + <span class="string">&#x27;100&#x27;</span>);             <span class="comment">// 100100</span></span><br><span class="line">alert(<span class="string">&#x27;11&#x27;</span> + <span class="number">12</span>);                 <span class="comment">// 1112</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line">alert(<span class="string">&#x27;我今年&#x27;</span> + age + <span class="string">&#x27;岁啦&#x27;</span>);     <span class="comment">// 我今年18岁啦</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Boolean</p>
<blockquote>
<p>值：true 和 false</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 布尔型和数字型相加，true 的值为 1，false 的值为 0</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + <span class="number">1</span>);  <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">false</span> + <span class="number">1</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Undefined</p>
<p>含义：未定义</p>
</li>
<li><p>Null</p>
<p>含义：空对象指针</p>
</li>
<li><p>Object</p>
</li>
<li><p>获取变量数据类型</p>
<blockquote>
<p>typeof [变量]</p>
</blockquote>
</li>
<li><p>数据类型转换</p>
<blockquote>
<p>其它类型    —&gt;    Number</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 1</span></span><br><span class="line"><span class="comment"> * parseInt(字符串): 把一个字符串中的整数部分解析出来</span></span><br><span class="line"><span class="comment"> * parseFloat(字符串): 把一个字符串中小数(浮点数)部分解析出来</span></span><br><span class="line"><span class="comment"> * 特点: 遇到一个非有效数字字符，查找结束</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&#x27;13.5px&#x27;</span>)             <span class="comment">// 13</span></span><br><span class="line"><span class="built_in">parseFloat</span>(<span class="string">&#x27;13.5px&#x27;</span>)         <span class="comment">// 13.5</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&#x27;width:13.5px&#x27;</span>)    <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 2</span></span><br><span class="line"><span class="comment"> * Number(变量) - 强制转换</span></span><br><span class="line"><span class="comment"> * 如果当前字符串中出现任意一个非有效数字字符，结果则为 NaN（重点）</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&#x27;13&#x27;</span>)             <span class="comment">// 13</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&#x27;13px&#x27;</span>)            <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&#x27;13.5&#x27;</span>)            <span class="comment">// 13.5</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">null</span>)            <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">undefined</span>)        <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">&#x27;&#x27;</span>)                 <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 3</span></span><br><span class="line"><span class="comment"> * 浏览器自动转换 - 强制转换</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其它类型    —&gt;    String</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 1</span></span><br><span class="line"><span class="comment"> * 变量.toString()</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">(&#123;&#125;).toString()         <span class="comment">// &#x27;[object Object]&#x27;</span></span><br><span class="line">[<span class="number">12</span>,<span class="number">23</span>].toString()         <span class="comment">// &#x27;12,23&#x27;</span></span><br><span class="line">[<span class="number">12</span>].toString()            <span class="comment">// &#x27;12&#x27;</span></span><br><span class="line">/^$/.toString()         <span class="comment">// &#x27;/^$/&#x27;</span></span><br><span class="line">[].toString()             <span class="comment">// &#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 2 - 强制转换</span></span><br><span class="line"><span class="comment"> * String(变量)</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 3 - 隐式转换</span></span><br><span class="line"><span class="comment"> * &quot;+&quot; 号拼接</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其它类型    —&gt;    Boolean</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式: Boolean()</span></span><br><span class="line"><span class="comment"> * JS中只有“0/NaN/空字符串/null/undefined”这五个值转换为布尔类型的false，其余都转换为true</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-3、运算符"><a href="#1-3、运算符" class="headerlink" title="1.3、运算符"></a>1.3、运算符</h5><ul>
<li><p>算术运算符</p>
<blockquote>
<p>加（+）减（-）乘（*）除（/），取余数（取模）（%）</p>
</blockquote>
<blockquote>
<p>表达式：由数字、运算符、变量等组成的式子</p>
</blockquote>
<blockquote>
<p>递增（++），递减（ – ）</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">++num: 先自加，后返回值</span><br><span class="line">num++: 先返回原值，后自加</span><br><span class="line">递减（ -- ）同理</span><br></pre></td></tr></table></figure>
</li>
<li><p>比较（关系）运算符</p>
<blockquote>
<p>大于（&gt;）…等等那些</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意点</span></span><br><span class="line">= : 赋值，把右边给左边</span><br><span class="line">== : 判断，判断两边值是否相等（注意隐式转换）</span><br><span class="line">=== : 全等，判断两边值和数据类型是否完全相同</span><br></pre></td></tr></table></figure>
</li>
<li><p>逻辑运算符</p>
<blockquote>
<p>与（&amp;&amp;）或（||）非（！）</p>
</blockquote>
</li>
<li><p>… 更多查相关文档</p>
</li>
</ul>
<h5 id="1-4、流程控制"><a href="#1-4、流程控制" class="headerlink" title="1.4、流程控制"></a>1.4、流程控制</h5><ul>
<li><p>顺序：代码自上而下，顺序执行</p>
</li>
<li><p>分支：条件判断</p>
<blockquote>
<p>if else …等等那些</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 类比 三元运算符</span></span><br><span class="line">表达式<span class="number">1</span> ? 表达式<span class="number">2</span> : 表达式<span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>switch</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>( 表达式 )&#123; </span><br><span class="line">    <span class="keyword">case</span> value1:</span><br><span class="line">        <span class="comment">// 表达式 等于 value1 时要执行的代码</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> value2:</span><br><span class="line">        <span class="comment">// 表达式 等于 value2 时要执行的代码</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// 表达式 不等于任何一个 value 时要执行的代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关键字 switch 后面括号内可以是表达式或值，通常是一个变量</span></span><br><span class="line"><span class="comment"> * 关键字 case, 后跟一个选项的表达式或值，后面跟一个冒号</span></span><br><span class="line"><span class="comment"> * switch 表达式的值会与结构中的 case 的值做比较</span></span><br><span class="line"><span class="comment"> * 如果存在匹配全等(===)，则与该 case 关联的代码块会被执行，并在遇到 break 时停止，整个 switch 语句代码执行结束</span></span><br><span class="line"><span class="comment"> * 如果所有的 case 的值都和表达式的值不匹配，则执行 default 里的代码</span></span><br><span class="line"><span class="comment"> * 注意: 执行 case 里面的语句时，如果没有 break，则继续执行下一个 case 里面的语句。</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-5、循环"><a href="#1-5、循环" class="headerlink" title="1.5、循环"></a>1.5、循环</h5><blockquote>
<p>for 循环</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 传统 for 循环，可多重循环</span></span><br><span class="line"><span class="keyword">for</span>(初始化变量; 条件表达式; 操作表达式 )&#123;</span><br><span class="line">    <span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>while 和 do-while 循环</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先判断，再执行循环体</span></span><br><span class="line"><span class="keyword">while</span> (条件表达式) &#123;</span><br><span class="line">    <span class="comment">// 循环体代码 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 先执行循环体，再判断</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// 循环体代码 - 条件表达式为 true 时重复执行循环体代码</span></span><br><span class="line">&#125; <span class="keyword">while</span>(条件表达式);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>continue：立即跳出本次循环，继续下一次循环（循环继续）</p>
<p>break：立即跳出整个循环（循环结束）</p>
</blockquote>
<h5 id="1-6、数组"><a href="#1-6、数组" class="headerlink" title="1.6、数组"></a>1.6、数组</h5><ul>
<li><p>创建数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方式 1</span></span><br><span class="line"><span class="keyword">var</span> 数组名 = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式 2</span></span><br><span class="line"><span class="keyword">var</span> 数组名 = []</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建并初始化（值类型可任意）</span></span><br><span class="line"><span class="keyword">var</span> 数组名 = [<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;小黑&#x27;</span>,<span class="string">&#x27;大黄&#x27;</span>,<span class="string">&#x27;瑞奇&#x27;</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>索引 （下标）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">概念: 用来访问数组元素的序号，从 <span class="number">0</span> 开始</span><br><span class="line">作用: 通过索引来访问、设置、修改对应的数组元素</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line"><span class="keyword">var</span> arrStus = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="comment">// 获取数组中的第 2 个元素, 如果没有则值是 undefined</span></span><br><span class="line">alert(arrStus[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure>
</li>
<li><p>遍历数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 形式: for 循环</span></span><br><span class="line"><span class="comment"> * 数组的长度: arr.length</span></span><br><span class="line"><span class="comment"> * 数组的元素个数 = 数组的长度 - 1</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arrStus[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基于数组的长度，在数组的末尾插入新元素</span></span><br><span class="line">数组[ 数组.length ] = 新数据;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="1-7、函数"><a href="#1-7、函数" class="headerlink" title="1.7、函数"></a>1.7、函数</h5><ul>
<li><p>声明与调用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明函数, 方式 1 - 命名函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//函数体代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明函数, 方式 2 - 匿名函数</span></span><br><span class="line"><span class="keyword">var</span> fn(函数名) = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//函数体代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line">函数名();</span><br><span class="line">fn();</span><br></pre></td></tr></table></figure>
</li>
<li><p>参数</p>
<blockquote>
<p>形参：形式上的参数, 当前并不知道是什么</p>
</blockquote>
<blockquote>
<p>实参：实际上的参数, 当前知道是什么</p>
</blockquote>
<blockquote>
<p>关系：实参 传递给 形参, 函数被调用的时候传递</p>
</blockquote>
<blockquote>
<p>数量：均可多个, 一般实参的数量对应形参的数量</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实参个数 &gt; 形参个数: 只取到形参的个数</span></span><br><span class="line"><span class="comment"> * 实参个数 &lt; 形参个数: 多出的定义为 undefined, 结果为 NaN</span></span><br><span class="line"><span class="comment"> * arguments</span></span><br><span class="line"><span class="comment"> * 作用: 当不确定有多少个参数传递的时候，可以用 arguments 来获取</span></span><br><span class="line"><span class="comment"> * 身份: 当前函数的一个内置对象</span></span><br><span class="line"><span class="comment"> * 形式: 伪数组, 可遍历</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>返回值</p>
<blockquote>
<p>概念：函数调用整体代表的数据</p>
</blockquote>
<blockquote>
<p>形式：return  需要返回的值;</p>
</blockquote>
<blockquote>
<p>说明：执行了 return  语句, 函数会停止执行，并返回指定的值</p>
</blockquote>
<blockquote>
<p>有无：可有可无, 如果函数没有 return ，返回的值是 undefined</p>
</blockquote>
</li>
</ul>
<h5 id="1-8、对象"><a href="#1-8、对象" class="headerlink" title="1.8、对象"></a>1.8、对象</h5><blockquote>
<p>具体看另一份笔记</p>
</blockquote>
<h5 id="1-9、作用域"><a href="#1-9、作用域" class="headerlink" title="1.9、作用域"></a>1.9、作用域</h5><ul>
<li><p>全局作用域</p>
<blockquote>
<p>作用于所有代码执行的环境(整个 script 标签内部)或者一个独立的 js 文件</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line">在全局作用域下声明的变量叫做全局变量（在函数外部定义的变量）</span><br></pre></td></tr></table></figure>
</li>
<li><p>局部作用域</p>
<blockquote>
<p>作用于函数内的代码环境，就是局部作用域。 因为跟函数有关系，所以也称为函数作用域</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 局部变量</span></span><br><span class="line">在局部作用域下声明的变量叫做局部变量（在函数内部定义的变量）</span><br></pre></td></tr></table></figure>
</li>
<li><p>作用域链</p>
</li>
</ul>
<h4 id="2、Web-API"><a href="#2、Web-API" class="headerlink" title="2、Web API"></a>2、Web API</h4><h5 id="2-1、获取元素"><a href="#2-1、获取元素" class="headerlink" title="2.1、获取元素"></a>2.1、获取元素</h5><ul>
<li><p>根据 ID  获取</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 语法: document.getElementById(id)</span></span><br><span class="line"><span class="comment"> * 作用: 根据 ID 获取元素对象</span></span><br><span class="line"><span class="comment"> * 参数: id 值，区分大小写的字符串</span></span><br><span class="line"><span class="comment"> * 返回值: 元素对象 或 null</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;time&quot;</span>&gt;<span class="number">2020</span><span class="number">-9</span><span class="number">-9</span>&lt;/div&gt;</span><br><span class="line">    <span class="comment">// 先得有标签，所以 script 写到标签结构的下面（最后面）</span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;time&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(timer);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> timer);</span><br><span class="line">        <span class="comment">// console.dir 打印返回的元素对象，更好的查看里面的属性和方法</span></span><br><span class="line">        <span class="built_in">console</span>.dir(timer);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>根据 标签名 获取</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 语法 1 : document.getElementsByTagName(&#x27;标签名&#x27;) </span></span><br><span class="line"><span class="comment"> * 语法 2 : element.getElementsByTagName(&#x27;标签名&#x27;)</span></span><br><span class="line"><span class="comment"> * 作用: 根据标签名获取元素对象</span></span><br><span class="line"><span class="comment"> * 参数: 标签名</span></span><br><span class="line"><span class="comment"> * 返回值: 元素对象集合（伪数组，数组元素是元素对象）</span></span><br><span class="line"><span class="comment"> * 注意: 获取到是动态集合，即: 当页面增加了标签，这个集合中也就增加了元素</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是等你好久<span class="number">11</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是等你好久<span class="number">22</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是等你好久<span class="number">33</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是等你好久<span class="number">44</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是等你好久<span class="number">55</span>&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;ul id=<span class="string">&quot;nav&quot;</span>&gt;</span><br><span class="line">        &lt;li&gt;生僻字&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;生僻字&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;生僻字&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;生僻字&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;生僻字&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 返回的是: 获取过来元素对象的集合，以伪数组的形式存储的</span></span><br><span class="line">        <span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(lis);</span><br><span class="line">        <span class="built_in">console</span>.log(lis[<span class="number">0</span>]);</span><br><span class="line">        <span class="comment">// 2. 想要依次打印里面的元素对象，可以采取遍历的方式</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(lis[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3. element.getElementsByTagName(): 可以得到这个元素里面的某些标签</span></span><br><span class="line">        <span class="comment">// 先获取外层，逐层获取</span></span><br><span class="line">        <span class="keyword">var</span> nav = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;nav&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> navLis = nav.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(navLis);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>H5 新增获取方式（注意兼容性）</p>
<blockquote>
<p>根据 类名 获取</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 语法: document.getElementsByClassName(&#x27;类名&#x27;) </span></span><br><span class="line"><span class="comment"> * 作用: 根据类名获取元素对象</span></span><br><span class="line"><span class="comment"> * 参数: 类名</span></span><br><span class="line"><span class="comment"> * 返回值: 元素对象集合（伪数组，数组元素是元素对象）</span></span><br><span class="line"><span class="comment"> * 注意: 获取到是动态集合，即: 当页面增加了标签，这个集合中也就增加了元素</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>根据 选择器 获取</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 语法: document.querySelector(&#x27;选择器&#x27;) </span></span><br><span class="line"><span class="comment"> * 作用: 根据选择器获取第一个元素对象</span></span><br><span class="line"><span class="comment"> * 参数: 选择器</span></span><br><span class="line"><span class="comment"> * 返回值: 指定选择器的第一个元素对象</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 语法: document.querySelectorAll(&#x27;选择器&#x27;) </span></span><br><span class="line"><span class="comment"> * 作用: 根据选择器获取所有元素对象</span></span><br><span class="line"><span class="comment"> * 参数: 选择器</span></span><br><span class="line"><span class="comment"> * 返回值: 指定选择器的所有元素对象集合</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;盒子<span class="number">1</span>&lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;盒子<span class="number">2</span>&lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;nav&quot;</span>&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;首页&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;产品&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. getElementsByClassName 根据类名获得某些元素集合</span></span><br><span class="line">        <span class="keyword">var</span> boxs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;box&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(boxs);</span><br><span class="line">        <span class="comment">// 2. querySelector: 返回指定选择器的第一个元素对象，切记: 里面的选择器需要加符号 .box  #nav</span></span><br><span class="line">        <span class="keyword">var</span> firstBox = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(firstBox);</span><br><span class="line">        <span class="keyword">var</span> nav = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#nav&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(nav);</span><br><span class="line">        <span class="keyword">var</span> li = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(li);</span><br><span class="line">        <span class="comment">// 3. querySelectorAll()返回指定选择器的所有元素对象集合</span></span><br><span class="line">        <span class="keyword">var</span> allBox = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(allBox);</span><br><span class="line">        <span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(lis);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取特殊元素</p>
<blockquote>
<p>body：document.body</p>
<p>html：document.documentElement</p>
</blockquote>
</li>
</ul>
<h5 id="2-2、事件"><a href="#2-2、事件" class="headerlink" title="2.2、事件"></a>2.2、事件</h5><ul>
<li><p>三要素</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事件源（谁）: 触发事件的元素 </span></span><br><span class="line"><span class="comment"> * 事件类型（什么事件）: 例如 click 点击事件</span></span><br><span class="line"><span class="comment"> * 参数: 类名</span></span><br><span class="line"><span class="comment"> * 事件处理程序（做啥）: 事件触发后要执行的代码(函数形式)，事件处理函数</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;btn&quot;</span>&gt;唐伯虎&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 执行事件步骤</span></span><br><span class="line">        <span class="comment">//(1) 获取事件源: 例如按钮</span></span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line">        <span class="comment">//(2) 绑定/注册事件类型: 例如鼠标点击(onclick)</span></span><br><span class="line">        <span class="comment">//(3) 添加事件处理程序: 函数体</span></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">&#x27;点秋香&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>事件注册的两种方式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、传统注册方式 </span></span><br><span class="line"><span class="comment"> * 特点: 注册事件的唯一性</span></span><br><span class="line"><span class="comment"> * 注意: 同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数会覆盖前面注册的处理函数</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2、监听注册方式 </span></span><br><span class="line"><span class="comment"> * 方法 1 : addEventListener()</span></span><br><span class="line"><span class="comment"> * 参数: </span></span><br><span class="line"><span class="comment"> *      (1)、事件类型字符串，如: click</span></span><br><span class="line"><span class="comment"> *     (2)、事件处理函数</span></span><br><span class="line"><span class="comment"> *   (3)、布尔值，可选，true: 事件捕获阶段调用，false: 事件冒泡阶段调用</span></span><br><span class="line"><span class="comment"> * 特点: 同一个元素同一个事件可以注册多个监听器</span></span><br><span class="line"><span class="comment"> * 注意: 按注册顺序依次执行, IE9 以后</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 方法 2 : attacheEvent()</span></span><br><span class="line"><span class="comment"> * 参数: </span></span><br><span class="line"><span class="comment"> *      (1)、事件类型字符串，如: click</span></span><br><span class="line"><span class="comment"> *     (2)、事件处理函数（回调函数）</span></span><br><span class="line"><span class="comment"> * 特点: 同一个元素同一个事件可以注册多个监听器</span></span><br><span class="line"><span class="comment"> * 注意: 按注册顺序依次执行, IE9 以前</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;传统注册事件&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;方法监听注册事件&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;ie9 attachEvent&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1. 传统方式注册事件</span></span><br><span class="line">        btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">&#x27;hao a u&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// 2. 事件侦听注册事件 addEventListener </span></span><br><span class="line">         <span class="comment">// (1) 里面的事件类型是字符串 必定加引号 而且不带 on</span></span><br><span class="line">         <span class="comment">// (2) 同一个元素 同一个事件可以添加多个侦听器（事件处理程序）</span></span><br><span class="line">        <span class="comment">// 注意: 此处 处理函数 一般写具名函数，而不是下面的匿名函数，便于事件删除操作</span></span><br><span class="line">        btns[<span class="number">1</span>].addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="number">22</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        btns[<span class="number">1</span>].addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="number">33</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="comment">// 3. attachEvent ie9 以前的版本支持</span></span><br><span class="line">        btns[<span class="number">2</span>].attachEvent(<span class="string">&#x27;onclick&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="number">11</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除（解绑）事件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、传统注册事件的删除</span></span><br><span class="line"><span class="comment"> * 形式: 事件源.事件名 = null;</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2、监听注册事件的删除</span></span><br><span class="line"><span class="comment"> * 方法 1 : removeEventListener()</span></span><br><span class="line"><span class="comment"> * 参数: 同上</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 方法 2 : detachEvent()</span></span><br><span class="line"><span class="comment"> * 参数: 同上</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;<span class="number">1</span>&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;<span class="number">2</span>&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;<span class="number">3</span>&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> divs = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        divs[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="number">11</span>);</span><br><span class="line">                <span class="comment">// 1. 传统方式删除事件</span></span><br><span class="line">                divs[<span class="number">0</span>].onclick = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 2. removeEventListener 删除事件</span></span><br><span class="line">        divs[<span class="number">1</span>].addEventListener(<span class="string">&#x27;click&#x27;</span>, fn) <span class="comment">// 里面的fn 不需要调用加小括号</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="number">22</span>);</span><br><span class="line">            divs[<span class="number">1</span>].removeEventListener(<span class="string">&#x27;click&#x27;</span>, fn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3. detachEvent</span></span><br><span class="line">        divs[<span class="number">2</span>].attachEvent(<span class="string">&#x27;onclick&#x27;</span>, fn1);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="number">33</span>);</span><br><span class="line">            divs[<span class="number">2</span>].detachEvent(<span class="string">&#x27;onclick&#x27;</span>, fn1);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>DOM 事件流</p>
<p>概念：事件发生时会在元素节点之间按照特定的顺序传播</p>
<blockquote>
<p>事件流的三个阶段</p>
</blockquote>
<p><img src="C:\Users\QQ916\Desktop\Web\img\1551169007768.png"></p>
<p>捕获阶段：由外往内，逐层响应（应用较少）</p>
<p>事件冒泡：由内往外，逐层响应（应用较多）</p>
<p>冒泡情况：有冒泡的事件，给父子嵌套的父盒子绑定该事件的时候，由于冒泡，父盒子绑定的事件被执行了两                    次</p>
<blockquote>
<p>注意事项：</p>
<p>（1）、JS 代码中只能执行捕获或者冒泡其中的一个阶段；</p>
<p>（2）、onClick 和 attachEvent 只能得到冒泡阶段；</p>
<p>（3）、部分事件没有冒泡，如：onblur、onfocus、onmouseenter、onmouseleave</p>
</blockquote>
</li>
<li><p>事件对象</p>
<p>概念：事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就是事件对象</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意事项</span></span><br><span class="line"><span class="comment"> * 1. event 就是一个事件对象，写到我们侦听函数的，小括号里面，当形参来看</span></span><br><span class="line"><span class="comment"> * 2. 事件对象只有有了事件才会存在，它是系统给我们自动创建的，不需要我们传递参数</span></span><br><span class="line"><span class="comment"> * 3. 这个事件对象我们可以自己命名 比如 event 、 evt、 e</span></span><br><span class="line"><span class="comment"> * 4. 有兼容性问题，ie678 通过 window.event 兼容性的写法: e = e || window.event;</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;<span class="number">123</span>&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// console.log(e);</span></span><br><span class="line">                <span class="comment">// console.log(window.event);</span></span><br><span class="line">                <span class="comment">// e = e || window.event;</span></span><br><span class="line">                <span class="built_in">console</span>.log(e);</span><br><span class="line">            &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 常见属性和方法</span></span><br><span class="line"><span class="comment"> * 1. e.target</span></span><br><span class="line"><span class="comment"> * 返回值: 触发事件的对象（元素）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 2. e.preventDefault()</span></span><br><span class="line"><span class="comment"> * 作用: 阻止默认事件，比如不让链接跳转, IE9 以上</span></span><br><span class="line"><span class="comment"> * 兼容: ie678: e.returnValue = false;</span></span><br><span class="line"><span class="comment"> * 无兼容问题写法: return false;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3、e.stopPropagation()</span></span><br><span class="line"><span class="comment"> * 作用: 阻止冒泡, IE9 以上</span></span><br><span class="line"><span class="comment"> * 兼容: ie678: e.event.cancelBubble = true;</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>事件委托（代理、委派）</p>
<p>原理：给父元素注册事件，利用事件冒泡，当子元素的事件触发，会冒泡到父元素，然后去控制相应的子元素</p>
<p>表述：<strong>不是每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响设置               每个子节点</strong></p>
<p>作用：减少 DOM 操作次数，提高程序性能</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给 ul 注册点击事件，然后利用事件对象的 e.target 来找到当前点击的 li，因为点击 li，事件会冒泡到 ul 上，ul 有注册事件，就会触发事件监听器</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;知否知否，点我应有弹框在手！&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，点我应有弹框在手！&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，点我应有弹框在手！&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，点我应有弹框在手！&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，点我应有弹框在手！&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 事件委托的核心原理：给父节点添加侦听器， 利用事件冒泡影响每一个子节点</span></span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">        ul.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// alert(&#x27;知否知否，点我应有弹框在手！&#x27;);</span></span><br><span class="line">            <span class="comment">// e.target 这个可以得到我们点击的对象</span></span><br><span class="line">            e.target.style.backgroundColor = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 注意: e.target 和 this 的区别</span></span><br><span class="line"><span class="comment">         * e.target: 触发事件的对象（元素），点击的是 li，故是 li 元素</span></span><br><span class="line"><span class="comment">         * this: 指向事件源，绑定点击事件的是 ul，故是获取到的 ul </span></span><br><span class="line"><span class="comment">         **/</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>mouseenter 和mouseover 的区别</p>
<blockquote>
<p>当鼠标移动到元素上时就会触发 mouseenter 事件，mouseover 鼠标经过自身盒子会触发，经过子盒子还会触发，mouseenter  只会经过自身盒子触发</p>
</blockquote>
<blockquote>
<p>原因：mouseenter 不会冒泡</p>
</blockquote>
<blockquote>
<p>注意：跟 mouseenter 搭配，鼠标离开 mouseleave  同样不会冒泡</p>
</blockquote>
</li>
</ul>
<h5 id="2-3、操作元素"><a href="#2-3、操作元素" class="headerlink" title="2.3、操作元素"></a>2.3、操作元素</h5><ul>
<li><p>改变元素内容（获取或设置）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 1 : element.innerText </span></span><br><span class="line"><span class="comment"> * 范围: 从起始位置到终止位置的内容</span></span><br><span class="line"><span class="comment"> * 特点: 去除 HTML 标签，空格 和 换行</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 2 : element.innerHTML</span></span><br><span class="line"><span class="comment"> * 范围: 从起始位置到终止位置的全部内容</span></span><br><span class="line"><span class="comment"> * 特点: 包括 HTML 标签，空格 和 换行</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;显示当前系统时间&lt;/button&gt;</span><br><span class="line">    &lt;div&gt;某个时间&lt;/div&gt;</span><br><span class="line">    &lt;p&gt;<span class="number">1123</span>&lt;/p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 点击了按钮，div里面的文字会发生变化</span></span><br><span class="line">        <span class="comment">// 1. 获取元素 </span></span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 注册事件</span></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// div.innerText = &#x27;2020-6-6&#x27;;</span></span><br><span class="line">            div.innerHTML = getDate();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            <span class="keyword">var</span> year = date.getFullYear();</span><br><span class="line">            <span class="keyword">var</span> month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> dates = date.getDate();</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="string">&#x27;星期日&#x27;</span>, <span class="string">&#x27;星期一&#x27;</span>, <span class="string">&#x27;星期二&#x27;</span>, <span class="string">&#x27;星期三&#x27;</span>, <span class="string">&#x27;星期四&#x27;</span>, <span class="string">&#x27;星期五&#x27;</span>, <span class="string">&#x27;星期六&#x27;</span>];</span><br><span class="line">            <span class="keyword">var</span> day = date.getDay();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;今天是：&#x27;</span> + year + <span class="string">&#x27;年&#x27;</span> + month + <span class="string">&#x27;月&#x27;</span> + dates + <span class="string">&#x27;日 &#x27;</span> + arr[day];</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>操作属性</p>
<blockquote>
<p>获取属性的值：元素对象.属性名</p>
<p>设置属性的值：元素对象.属性名 = 值</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 常见操作属性</span></span><br><span class="line"><span class="comment"> * src、href、id、alt、title</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;ldh&quot;</span>&gt;刘德华&lt;/button&gt;</span><br><span class="line">    &lt;button id=<span class="string">&quot;zxy&quot;</span>&gt;张学友&lt;/button&gt; <span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line">    &lt;img src=&quot;images/ldh.jpg&quot; alt=&quot;&quot; title=&quot;刘德华&quot;&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 例如: 修改元素属性: src</span><br><span class="line">        // 1. 获取元素</span><br><span class="line">        var ldh = document.getElementById(&#x27;ldh&#x27;);</span><br><span class="line">        var zxy = document.getElementById(&#x27;zxy&#x27;);</span><br><span class="line">        var img = document.querySelector(&#x27;img&#x27;);</span><br><span class="line">        // 2. 注册事件, 处理程序</span><br><span class="line">        zxy.onclick = function() &#123;</span><br><span class="line">            img.src = &#x27;images/zxy.jpg&#x27;;</span><br><span class="line">            img.title = &#x27;张学友思密达&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        ldh.onclick = function() &#123;</span><br><span class="line">            img.src = &#x27;images/ldh.jpg&#x27;;</span><br><span class="line">            img.title = &#x27;刘德华&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 常见表单操作属性</span></span><br><span class="line"><span class="xml"> * type、value、checked、selected、disabled</span></span><br><span class="line"><span class="xml"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;按钮&lt;/button&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; value=&quot;输入内容&quot;&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 1. 获取元素</span><br><span class="line">        var btn = document.querySelector(&#x27;button&#x27;);</span><br><span class="line">        var input = document.querySelector(&#x27;input&#x27;);</span><br><span class="line">        // 2. 注册事件 处理程序</span><br><span class="line">        btn.onclick = function() &#123;</span><br><span class="line">            // 表单里面的值，文字内容是通过 value 来修改的</span><br><span class="line">            input.value = &#x27;被点击了&#x27;;</span><br><span class="line">            // 如果想要某个表单被禁用，不能再点击: disabled = true</span><br><span class="line">            // btn.disabled = true;</span><br><span class="line">            this.disabled = true;</span><br><span class="line">            // this 指向的是事件函数的调用者 btn</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 常见样式属性</span><br><span class="line"> * style: 行内样式, 权重较高, 样式较少或者功能简单的情况下使用</span><br><span class="line"> * 方式: 元素对象.style.样式属性 = 值;</span><br><span class="line"> * className: 类名样式, 样式较多或者功能复杂的情况</span><br><span class="line"> * 方式: 元素对象.className = 值;</span><br><span class="line"> **/</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 1. 获取元素</span><br><span class="line">        var div = document.querySelector(&#x27;div&#x27;);</span><br><span class="line">        // 2. 注册事件 处理程序</span><br><span class="line">        div.onclick = function() &#123;</span><br><span class="line">            // div.style 里面的属性，采取驼峰命名法 </span><br><span class="line">            this.style.backgroundColor = &#x27;purple&#x27;;</span><br><span class="line">            this.style.width = &#x27;250px&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;first&quot;&gt;文本&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var test = document.querySelector(&#x27;div&#x27;);</span><br><span class="line">        test.onclick = function() &#123;</span><br><span class="line">            // this.className = &#x27;change&#x27;;</span><br><span class="line">            this.className = &#x27;first change&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>自定义属性的操作</p>
<blockquote>
<p>目的：为了保存并使用数据，有些数据可以保存到页面中而不用保存到数据库中</p>
</blockquote>
<blockquote>
<p>获取属性值：element.属性，元素本身自带的属性</p>
<p>获取属性值：element.getAttribute(‘属性’)，自定义属性</p>
<p>设置元素属性值：element.属性= ‘值’，元素本身自带的属性</p>
<p>设置元素属性值：element.setAttribute(‘属性’, ‘值’)，自定义属性</p>
<p>移除属性：removeAttribute(‘属性’)</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;demo&quot;</span> index=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;nav&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1. 获取元素的属性值</span></span><br><span class="line">        <span class="comment">// (1) element.属性</span></span><br><span class="line">        <span class="built_in">console</span>.log(div.id);</span><br><span class="line">        <span class="comment">// (2) element.getAttribute(&#x27;属性&#x27;) </span></span><br><span class="line">        <span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;id&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;index&#x27;</span>));</span><br><span class="line">        <span class="comment">// 2. 设置元素属性值</span></span><br><span class="line">        <span class="comment">// (1) element.属性= &#x27;值&#x27;</span></span><br><span class="line">        div.id = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">        div.className = <span class="string">&#x27;navs&#x27;</span>;</span><br><span class="line">        <span class="comment">// (2) element.setAttribute(&#x27;属性&#x27;, &#x27;值&#x27;);</span></span><br><span class="line">        div.setAttribute(<span class="string">&#x27;index&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="comment">// class 特殊，这里面写的就是 class，不是 className</span></span><br><span class="line">        div.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;footer&#x27;</span>); </span><br><span class="line">        <span class="comment">// 3 移除属性 removeAttribute(属性)    </span></span><br><span class="line">        div.removeAttribute(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>H5 自定义属性</p>
<blockquote>
<p>方式：data- 开头作为属性名并赋值，例如：data-index=”1”</p>
<p>目的：为了区分该属性是内置属性还是自定义属性，data- 开头为自定义属性，否则为内置属性</p>
</blockquote>
<blockquote>
<p>获取 H5 自定义属性：element.getAttribute(‘data-属性’)，兼容获取</p>
<p>获取 H5 自定义属性：element.dataset.属性 or element.dataset[‘属性’]，IE 11 版本以上</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div getTime=<span class="string">&quot;20&quot;</span> data-index=<span class="string">&quot;2&quot;</span> data-list-name=<span class="string">&quot;andy&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;getTime&#x27;</span>));</span><br><span class="line">        div.setAttribute(<span class="string">&#x27;data-time&#x27;</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;data-index&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(div.getAttribute(<span class="string">&#x27;data-list-name&#x27;</span>));</span><br><span class="line">        <span class="comment">// h5新增的获取自定义属性的方法 它只能获取data-开头的</span></span><br><span class="line">        <span class="comment">// dataset 是一个集合里面存放了所有以data开头的自定义属性</span></span><br><span class="line">        <span class="built_in">console</span>.log(div.dataset);</span><br><span class="line">        <span class="built_in">console</span>.log(div.dataset.index);</span><br><span class="line">        <span class="built_in">console</span>.log(div.dataset[<span class="string">&#x27;index&#x27;</span>]);</span><br><span class="line">        <span class="comment">// 如果自定义属性里面有多个-链接的单词，获取的时候采取 驼峰命名法</span></span><br><span class="line">        <span class="built_in">console</span>.log(div.dataset.listName);</span><br><span class="line">        <span class="built_in">console</span>.log(div.dataset[<span class="string">&#x27;listName&#x27;</span>]);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="2-4、节点操作"><a href="#2-4、节点操作" class="headerlink" title="2.4、节点操作"></a>2.4、节点操作</h5><blockquote>
<p>目的：使 DOM 元素的操作变得更简单，逻辑性更强</p>
</blockquote>
<ul>
<li><p>父子关系</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 父节点: parentNode</span></span><br><span class="line"><span class="comment"> * 注意: 最近的一个父节点(亲爸爸)，如果指定的节点没有父节点则返回 NULL</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;demo&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;erweima&quot;</span>&gt;×&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 父节点 parentNode</span></span><br><span class="line">        <span class="keyword">var</span> erweima = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.erweima&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(erweima.parentNode);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有子节点: childNodes、children（常用）</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;ol&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;/li&gt;</span><br><span class="line">    &lt;/ol&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 子节点: childNodes，所有的子节点包含: 元素节点、文本节点等等</span></span><br><span class="line">        <span class="built_in">console</span>.log(ul.childNodes);</span><br><span class="line">        <span class="built_in">console</span>.log(ul.childNodes[<span class="number">0</span>].nodeType);</span><br><span class="line">        <span class="built_in">console</span>.log(ul.childNodes[<span class="number">1</span>].nodeType);</span><br><span class="line">        <span class="comment">// 2. children: 获取所有的子元素节点，也是实际开发常用的，兼容</span></span><br><span class="line">        <span class="built_in">console</span>.log(ul.children);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 第一个子节点: firstChild，所有</span></span><br><span class="line"><span class="comment"> * 最后一个子节点: lastChild，所有</span></span><br><span class="line"><span class="comment"> * 第一个子元素节点: firstElementChild，第一个子元素</span></span><br><span class="line"><span class="comment"> * 最后一个子元素节点: lastElementChild，最后一个子元素</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ol&gt;</span><br><span class="line">        &lt;li&gt;我是li1&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li2&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li3&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li4&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;我是li5&lt;/li&gt;</span><br><span class="line">    &lt;/ol&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> ol = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ol&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1. firstChild 第一个子节点，不管是文本节点还是元素节点都有</span></span><br><span class="line">        <span class="built_in">console</span>.log(ol.firstChild);</span><br><span class="line">        <span class="built_in">console</span>.log(ol.lastChild);</span><br><span class="line">        <span class="comment">// 2. firstElementChild，返回第一个子元素节点，ie9 才支持</span></span><br><span class="line">        <span class="built_in">console</span>.log(ol.firstElementChild);</span><br><span class="line">        <span class="built_in">console</span>.log(ol.lastElementChild);</span><br><span class="line">        <span class="comment">// 3. 实际开发的写法，既没有兼容性问题又返回第一个子元素</span></span><br><span class="line">        <span class="built_in">console</span>.log(ol.children[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">console</span>.log(ol.children[ol.children.length - <span class="number">1</span>]);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>兄弟/姐妹关系</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * nextSibling、previousSibling - 所有</span></span><br><span class="line"><span class="comment"> * nextElementSibling、previousElementSibling - 元素</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;我是div&lt;/div&gt;</span><br><span class="line">    &lt;span&gt;我是span&lt;/span&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1. nextSibling 下一个兄弟节点 包含元素节点或者 文本节点等等</span></span><br><span class="line">        <span class="built_in">console</span>.log(div.nextSibling);</span><br><span class="line">        <span class="built_in">console</span>.log(div.previousSibling);</span><br><span class="line">        <span class="comment">// 2. nextElementSibling 得到下一个兄弟元素节点</span></span><br><span class="line">        <span class="built_in">console</span>.log(div.nextElementSibling);</span><br><span class="line">        <span class="built_in">console</span>.log(div.previousElementSibling);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建节点 和 添加节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建节点</span></span><br><span class="line"><span class="comment"> * 方式: document.createElement(&#x27;tagName&#x27;)</span></span><br><span class="line"><span class="comment"> * 说明: 创建由 tagName 指定的 HTML 元素，原先不存在，是根据需求动态生成的</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加节点</span></span><br><span class="line"><span class="comment"> * 方式 1 : node.appendChild(child)</span></span><br><span class="line"><span class="comment"> * 说明: node: 父级, child: 子级，将一个节点添加到指定父节点的子节点列表的末尾</span></span><br><span class="line"><span class="comment"> * 方式 2 : node.insertBefore(child, 指定元素)</span></span><br><span class="line"><span class="comment"> * 说明: node: 父级, child: 子级，将一个节点添加到父节点的指定子节点的前面</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">123</span>&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 创建元素节点</span></span><br><span class="line">        <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 添加节点 node.appendChild(child)</span></span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">        ul.appendChild(li);</span><br><span class="line">        <span class="comment">// 3. 添加节点 node.insertBefore(child, 指定子节点元素);</span></span><br><span class="line">        <span class="keyword">var</span> lili = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        ul.insertBefore(lili, ul.children[<span class="number">0</span>]);</span><br><span class="line">        <span class="comment">// 4. 想要页面添加一个新的元素 ： 1. 创建元素 2. 添加元素</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * node.removeChild()</span></span><br><span class="line"><span class="comment"> * 作用: 从 DOM 节点中删除一个子节点</span></span><br><span class="line"><span class="comment"> * 返回: 删除的节点</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;删除&lt;/button&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;熊大&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;熊二&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;光头强&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1.获取元素</span></span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 删除元素  node.removeChild(child)</span></span><br><span class="line">        <span class="comment">// ul.removeChild(ul.children[0]);</span></span><br><span class="line">        <span class="comment">// 3. 点击按钮依次删除里面的孩子</span></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (ul.children.length == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.disabled = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ul.removeChild(ul.children[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>复制节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * node.cloneNode()</span></span><br><span class="line"><span class="comment"> * 参数: 空或者 false，浅拷贝即: 只复制标签不复制里面的内容，true，深拷贝</span></span><br><span class="line"><span class="comment"> * 返回: 克隆节点</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">1111</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">2</span>&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;<span class="number">3</span>&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1. node.cloneNode();</span></span><br><span class="line">        <span class="comment">// 2. node.cloneNode(true);</span></span><br><span class="line">        <span class="keyword">var</span> lili = ul.children[<span class="number">0</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">        ul.appendChild(lili);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>三种创建元素的方式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 1 : document.write()</span></span><br><span class="line"><span class="comment"> * 说明: 如果页面文档流加载完毕，再调用这句话会导致页面重绘</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 2 : element.innerHTML</span></span><br><span class="line"><span class="comment"> * 说明: 将内容写入某个 DOM 节点，不会导致页面全部重绘</span></span><br><span class="line"><span class="comment"> * 效率: 效率更高（不要拼接字符串，采取数组形式拼接）</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式 3 : document.createElement()</span></span><br><span class="line"><span class="comment"> * 说明: 创建元素</span></span><br><span class="line"><span class="comment"> * 效率: 稍微低一点点，但结构清晰</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;p&gt;abc&lt;/p&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;inner&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;create&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 三种创建元素方式区别 </span></span><br><span class="line">        <span class="comment">// 1. document.write() 创建元素  如果页面文档流加载完毕，再调用这句话会导致页面重绘</span></span><br><span class="line">        <span class="comment">// var btn = document.querySelector(&#x27;button&#x27;);</span></span><br><span class="line">        <span class="comment">// btn.onclick = function() &#123;</span></span><br><span class="line">        <span class="comment">//     document.write(&#x27;&lt;div&gt;123&lt;/div&gt;&#x27;);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. innerHTML 创建元素</span></span><br><span class="line">        <span class="keyword">var</span> inner = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.inner&#x27;</span>);</span><br><span class="line">        <span class="comment">// for (var i = 0; i &lt;= 100; i++) &#123;</span></span><br><span class="line">               <span class="comment">// 拼接字符串的方式效率低    </span></span><br><span class="line">        <span class="comment">//     inner.innerHTML += &#x27;&lt;a href=&quot;#&quot;&gt;百度&lt;/a&gt;&#x27;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// 数组形式拼接，效率高</span></span><br><span class="line">        <span class="keyword">var</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            arr.push(<span class="string">&#x27;&lt;a href=&quot;#&quot;&gt;百度&lt;/a&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        inner.innerHTML = arr.join(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 3. document.createElement() 创建元素</span></span><br><span class="line">        <span class="keyword">var</span> create = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.create&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            create.appendChild(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h5 id="2-5、算法思想"><a href="#2-5、算法思想" class="headerlink" title="2.5、算法思想"></a>2.5、算法思想</h5><ul>
<li><p>排它思想算法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 适用: 如果有同一组元素，我们想要某一个元素实现某种样式，需要用到循环的排他思想算法</span></span><br><span class="line"><span class="comment"> * 步骤: </span></span><br><span class="line"><span class="comment"> * 1、所有元素全部清除样式（干掉其他人）</span></span><br><span class="line"><span class="comment"> * 2、给当前元素设置样式 （留下我自己）</span></span><br><span class="line"><span class="comment"> * 注意: 注意顺序不能颠倒，首先干掉其他人，再设置自己</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;按钮<span class="number">1</span>&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;按钮<span class="number">2</span>&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;按钮<span class="number">3</span>&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;按钮<span class="number">4</span>&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;按钮<span class="number">5</span>&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取所有按钮元素</span></span><br><span class="line">        <span class="keyword">var</span> btns = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="comment">// btns 得到的是伪数组，里面的每一个元素 btns[i]</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class="line">            btns[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// (1) 我们先把所有的按钮背景颜色去掉: 干掉所有人</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class="line">                    btns[i].style.backgroundColor = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// (2) 然后才让当前的元素背景颜色为pink: 留下我自己</span></span><br><span class="line">                <span class="built_in">this</span>.style.backgroundColor = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2. 首先先排除其他人，然后才设置自己的样式，这种排除其他人的思想我们成为排他思想</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="2-6、各大案例"><a href="#2-6、各大案例" class="headerlink" title="2.6、各大案例"></a>2.6、各大案例</h5><ul>
<li><p>案例 1 - 分时显示不同图片和问候语</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;images/s.gif&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">    &lt;div&gt;上午好&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1.获取元素</span></span><br><span class="line">        <span class="keyword">var</span> img = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 得到当前的小时数</span></span><br><span class="line">        <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="keyword">var</span> h = date.getHours();</span><br><span class="line">        <span class="comment">// 3. 判断小时数改变图片和文字信息</span></span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">12</span>) &#123;</span><br><span class="line">            img.src = <span class="string">&#x27;images/s.gif&#x27;</span>;</span><br><span class="line">            div.innerHTML = <span class="string">&#x27;亲，上午好，好好写代码&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (h &lt; <span class="number">18</span>) &#123;</span><br><span class="line">            img.src = <span class="string">&#x27;images/x.gif&#x27;</span>;</span><br><span class="line">            div.innerHTML = <span class="string">&#x27;亲，下午好，好好写代码&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            img.src = <span class="string">&#x27;images/w.gif&#x27;</span>;</span><br><span class="line">            div.innerHTML = <span class="string">&#x27;亲，晚上好，好好写代码&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 2 - 仿京东显示密码</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\mimak.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 核心: 改变 type 属性的值</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">            &lt;img src=<span class="string">&quot;images/close.png&quot;</span> alt=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;eye&quot;</span>&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;pwd&quot;</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> eye = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;eye&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pwd&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 注册事件 处理程序</span></span><br><span class="line">        <span class="keyword">var</span> flag = <span class="number">0</span>;</span><br><span class="line">        eye.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 0: 表示 密码框</span></span><br><span class="line"><span class="comment">             * 1 或 其它: 表示 文本框</span></span><br><span class="line"><span class="comment">             * 所以点击一次之后，flag 一定要变化</span></span><br><span class="line"><span class="comment">             **/</span></span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">                pwd.type = <span class="string">&#x27;text&#x27;</span>;</span><br><span class="line">                eye.src = <span class="string">&#x27;images/open.png&#x27;</span>;</span><br><span class="line">                flag = <span class="number">1</span>; <span class="comment">// 赋值操作</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                pwd.type = <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line">                eye.src = <span class="string">&#x27;images/close.png&#x27;</span>;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 3 - 点击关闭二维码</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\gbewm.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 核心: 样式的显示与隐藏，display: block; display: none;</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">        淘宝二维码</span><br><span class="line">        &lt;img src=<span class="string">&quot;images/tao.png&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;close-btn&quot;</span>&gt;×&lt;/i&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素 </span></span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.close-btn&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2.注册事件 程序处理</span></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            box.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 4 - 循环精灵图背景</p>
</li>
<li><p>效果及分析</p>
<img src="C:\Users\QQ916\Desktop\Web\img\jlscx1.PNG" style="zoom: 50%;" />

<p><img src="C:\Users\QQ916\Desktop\Web\img\xgxhj.PNG"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            list-style-type: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box &#123;</span><br><span class="line">            width: <span class="number">250</span>px;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: <span class="number">24</span>px;</span><br><span class="line">            height: <span class="number">24</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: <span class="number">15</span>px;</span><br><span class="line">            background: url(images/sprite.png) no-repeat;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素 所有的小li </span></span><br><span class="line">        <span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 让索引号 乘以 44 就是每个li 的背景y坐标  index就是我们的y坐标</span></span><br><span class="line">            <span class="keyword">var</span> index = i * <span class="number">44</span>;</span><br><span class="line">            lis[i].style.backgroundPosition = <span class="string">&#x27;0 -&#x27;</span> + index + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 5 - 显示隐藏文本框里面的内容</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\xsycwbk.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;手机&quot;</span>&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1.获取元素</span></span><br><span class="line">        <span class="keyword">var</span> text = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2.注册事件 获得焦点事件 onfocus </span></span><br><span class="line">        text.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// console.log(&#x27;得到了焦点&#x27;);</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.value === <span class="string">&#x27;手机&#x27;</span>) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 获得焦点需要把文本框里面的文字颜色变黑</span></span><br><span class="line">                <span class="built_in">this</span>.style.color = <span class="string">&#x27;#333&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 3. 注册事件 失去焦点事件 onblur</span></span><br><span class="line">        text.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(&#x27;失去了焦点&#x27;);</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.value === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.value = <span class="string">&#x27;手机&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 失去焦点需要把文本框里面的文字颜色变浅色</span></span><br><span class="line">            <span class="built_in">this</span>.style.color = <span class="string">&#x27;#999&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 6 - 密码框格式提示错误信息</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\mimts.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">600</span>px;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .message &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            font-size: <span class="number">12</span>px;</span><br><span class="line">            color: #999;</span><br><span class="line">            background: url(images/mess.png) no-repeat left center;</span><br><span class="line">            padding-left: <span class="number">20</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .wrong &#123;</span><br><span class="line">            color: red;</span><br><span class="line">            background-image: url(images/wrong.png);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .right &#123;</span><br><span class="line">            color: green;</span><br><span class="line">            background-image: url(images/right.png);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;register&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;password&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;ipt&quot;</span>&gt;</span><br><span class="line">        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;message&quot;</span>&gt;请输入<span class="number">6</span>~<span class="number">16</span>位密码&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 首先判断的事件是表单失去焦点 onblur</span></span><br><span class="line">        <span class="comment">// 如果输入正确则提示正确的信息颜色为绿色小图标变化</span></span><br><span class="line">        <span class="comment">// 如果输入不是6到16位，则提示错误信息颜色为红色 小图标变化</span></span><br><span class="line">        <span class="comment">// 1.获取元素</span></span><br><span class="line">        <span class="keyword">var</span> ipt = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.ipt&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> message = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.message&#x27;</span>);</span><br><span class="line">        <span class="comment">//2. 注册事件 失去焦点</span></span><br><span class="line">        ipt.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 根据表单里面值的长度 ipt.value.length</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.value.length &lt; <span class="number">6</span> || <span class="built_in">this</span>.value.length &gt; <span class="number">16</span>) &#123;</span><br><span class="line">                <span class="comment">// console.log(&#x27;错误&#x27;);</span></span><br><span class="line">                message.className = <span class="string">&#x27;message wrong&#x27;</span>;</span><br><span class="line">                message.innerHTML = <span class="string">&#x27;您输入的位数不对要求6~16位&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                message.className = <span class="string">&#x27;message right&#x27;</span>;</span><br><span class="line">                message.innerHTML = <span class="string">&#x27;您输入的正确&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 7 - 换肤</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\hf.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        body &#123;</span><br><span class="line">            background: url(images/<span class="number">1.</span>jpg) no-repeat center top;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .baidu &#123;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line">            background-color: #fff;</span><br><span class="line">            width: <span class="number">410</span>px;</span><br><span class="line">            padding-top: <span class="number">3</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .baidu li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            margin: <span class="number">0</span> <span class="number">1</span>px;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .baidu img &#123;</span><br><span class="line">            width: <span class="number">100</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;baidu&quot;</span>&gt;</span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素 </span></span><br><span class="line">        <span class="keyword">var</span> imgs = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.baidu&#x27;</span>).querySelectorAll(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">        <span class="comment">// console.log(imgs);</span></span><br><span class="line">        <span class="comment">// 2. 循环注册事件 </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span><br><span class="line">            imgs[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// this.src 就是我们点击图片的路径: images/2.jpg</span></span><br><span class="line">                <span class="comment">// 把这个路径 this.src 给 body 就可以了</span></span><br><span class="line">                <span class="built_in">document</span>.body.style.backgroundImage = <span class="string">&#x27;url(&#x27;</span> + <span class="built_in">this</span>.src + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 8 - 鼠标经过隔行变色</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\biaogh.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        table &#123;</span><br><span class="line">            width: <span class="number">800</span>px;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            border-collapse: collapse;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        thead tr &#123;</span><br><span class="line">            height: <span class="number">30</span>px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        tbody tr &#123;</span><br><span class="line">            height: <span class="number">30</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        tbody td &#123;</span><br><span class="line">            border-bottom: 1px solid #d7d7d7;</span><br><span class="line">            font-size: <span class="number">12</span>px;</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .bg &#123;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;代码&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;名称&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;最新公布净值&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;累计净值&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;前单位净值&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;净值增长率&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">003526</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;农银金穗<span class="number">3</span>个月定期开放债券&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.075</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.079</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.074</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;+<span class="number">0.047</span>%&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">003526</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;农银金穗<span class="number">3</span>个月定期开放债券&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.075</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.079</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.074</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;+<span class="number">0.047</span>%&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">003526</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;农银金穗<span class="number">3</span>个月定期开放债券&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.075</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.079</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.074</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;+<span class="number">0.047</span>%&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">003526</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;农银金穗<span class="number">3</span>个月定期开放债券&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.075</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.079</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.074</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;+<span class="number">0.047</span>%&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">003526</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;农银金穗<span class="number">3</span>个月定期开放债券&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.075</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.079</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.074</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;+<span class="number">0.047</span>%&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">003526</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;农银金穗<span class="number">3</span>个月定期开放债券&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.075</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.079</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1.074</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;+<span class="number">0.047</span>%&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1.获取元素 获取的是 tbody 里面所有的行</span></span><br><span class="line">        <span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;tbody&#x27;</span>).querySelectorAll(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 利用循环绑定注册事件</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 3. 鼠标经过事件 onmouseover</span></span><br><span class="line">            trs[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// console.log(11);</span></span><br><span class="line">                <span class="built_in">this</span>.className = <span class="string">&#x27;bg&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 4. 鼠标离开事件 onmouseout</span></span><br><span class="line">            trs[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 9 - 表格部分选与全选</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\bgqx.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .wrap &#123;</span><br><span class="line">            width: <span class="number">300</span>px;</span><br><span class="line">            margin: <span class="number">100</span>px auto <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        table &#123;</span><br><span class="line">            border-collapse: collapse;</span><br><span class="line">            border-spacing: <span class="number">0</span>;</span><br><span class="line">            border: 1px solid #c0c0c0;</span><br><span class="line">            width: <span class="number">300</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        th,</span><br><span class="line">        td &#123;</span><br><span class="line">            border: 1px solid #d0d0d0;</span><br><span class="line">            color: #404060;</span><br><span class="line">            padding: <span class="number">10</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        th &#123;</span><br><span class="line">            background-color: #09c;</span><br><span class="line">            font: bold <span class="number">16</span>px <span class="string">&quot;微软雅黑&quot;</span>;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        td &#123;</span><br><span class="line">            font: <span class="number">14</span>px <span class="string">&quot;微软雅黑&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        tbody tr &#123;</span><br><span class="line">            background-color: #f0f0f0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        tbody tr:hover &#123;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            background-color: #fafafa;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;wrap&quot;</span>&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;th&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;checkbox&quot;</span> id=<span class="string">&quot;j_cbAll&quot;</span> /&gt;</span><br><span class="line">                    &lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;商品&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;价钱&lt;/th&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody id=<span class="string">&quot;j_tb&quot;</span>&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;checkbox&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;iPhone8&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;<span class="number">8000</span>&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;checkbox&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;iPad Pro&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;<span class="number">5000</span>&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;checkbox&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;iPad Air&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;<span class="number">2000</span>&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;checkbox&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;Apple Watch&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;<span class="number">2000</span>&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 全选和取消全选做法: 让下面所有复选框的checked属性（选中状态）跟随全选按钮即可</span></span><br><span class="line">        <span class="comment">// 获取元素</span></span><br><span class="line">        <span class="comment">// 全选按钮</span></span><br><span class="line">        <span class="keyword">var</span> j_cbAll = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;j_cbAll&#x27;</span>);</span><br><span class="line">        <span class="comment">// 下面所有的复选框</span></span><br><span class="line">        <span class="keyword">var</span> j_tbs = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;j_tb&#x27;</span>).getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        <span class="comment">// 注册事件</span></span><br><span class="line">        j_cbAll.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// this.checked 它可以得到当前复选框的选中状态,如果是true 就是选中，如果是false 就是未选中</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; j_tbs.length; i++) &#123;</span><br><span class="line">                    j_tbs[i].checked = <span class="built_in">this</span>.checked;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 2. 下面复选框需要全部选中，上面全选才能选中做法：给下面所有复选框绑定点击事件，每次点击，都要循环查看下面所有的复选框是否有没选中的，如果有一个没选中的，上面全选就不选中。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; j_tbs.length; i++) &#123;</span><br><span class="line">            j_tbs[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// flag 控制全选按钮是否选中</span></span><br><span class="line">                <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="comment">// 每次点击下面的复选框都要循环检查者4个小按钮是否全被选中</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; j_tbs.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!j_tbs[i].checked) &#123;</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>; <span class="comment">// 退出for循环 这样可以提高执行效率 因为只要有一个没有选中，剩下的就无需循环判断了</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                j_cbAll.checked = flag;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 10 - tab 栏切换</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\tablqh.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            list-style-type: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .tab &#123;</span><br><span class="line">            width: <span class="number">978</span>px;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .tab_list &#123;</span><br><span class="line">            height: <span class="number">39</span>px;</span><br><span class="line">            border: 1px solid #ccc;</span><br><span class="line">            background-color: #f1f1f1;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .tab_list li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            height: <span class="number">39</span>px;</span><br><span class="line">            line-height: <span class="number">39</span>px;</span><br><span class="line">            padding: <span class="number">0</span> <span class="number">20</span>px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .tab_list .current &#123;</span><br><span class="line">            background-color: #c81623;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .item_info &#123;</span><br><span class="line">            padding: <span class="number">20</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">20</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .item &#123;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab_list&quot;</span>&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;current&quot;</span>&gt;商品介绍&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;规格与包装&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;售后保障&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;商品评价（<span class="number">50000</span>）&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;手机社区&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tab_con&quot;</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item&quot;</span> style=<span class="string">&quot;display: block;&quot;</span>&gt;</span><br><span class="line">                商品介绍模块内容</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item&quot;</span>&gt;</span><br><span class="line">                规格与包装模块内容</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item&quot;</span>&gt;</span><br><span class="line">                售后保障模块内容</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item&quot;</span>&gt;</span><br><span class="line">                商品评价（<span class="number">50000</span>）模块内容</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item&quot;</span>&gt;</span><br><span class="line">                手机社区模块内容</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> tab_list = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.tab_list&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> lis = tab_list.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> items = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.item&#x27;</span>);</span><br><span class="line">        <span class="comment">// for循环绑定点击事件</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 开始给5个小li 设置索引号 </span></span><br><span class="line">            lis[i].setAttribute(<span class="string">&#x27;index&#x27;</span>, i);</span><br><span class="line">            lis[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 1. 上的模块选项卡，点击某一个，当前这一个底色会是红色，其余不变（排他思想） 修改类名的方式</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 干掉所有人 其余的li清除 class 这个类</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">                    lis[i].className = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 留下我自己 </span></span><br><span class="line">                <span class="built_in">this</span>.className = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">                <span class="comment">// 2. 下面的显示内容模块</span></span><br><span class="line">                <span class="keyword">var</span> index = <span class="built_in">this</span>.getAttribute(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(index);</span><br><span class="line">                <span class="comment">// 干掉所有人 让其余的item 这些div 隐藏</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">                    items[i].style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 留下我自己 让对应的item 显示出来</span></span><br><span class="line">                items[index].style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 11 - 下拉菜单</p>
</li>
<li><p>效果演示</p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            list-style-type: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        a &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav &#123;</span><br><span class="line">            margin: <span class="number">100</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav&gt;li &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            float: left;</span><br><span class="line">            width: <span class="number">80</span>px;</span><br><span class="line">            height: <span class="number">41</span>px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav li a &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            line-height: <span class="number">41</span>px;</span><br><span class="line">            color: #333;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav&gt;li&gt;a:hover &#123;</span><br><span class="line">            background-color: #eee;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav ul &#123;</span><br><span class="line">            display: none;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: <span class="number">41</span>px;</span><br><span class="line">            left: <span class="number">0</span>;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            border-left: 1px solid #FECC5B;</span><br><span class="line">            border-right: 1px solid #FECC5B;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav ul li &#123;</span><br><span class="line">            border-bottom: 1px solid #FECC5B;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .nav ul li a:hover &#123;</span><br><span class="line">            background-color: #FFF5DA;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;nav&quot;</span>&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span>&gt;微博&lt;/a&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;私信&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;评论&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;@我&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span>&gt;微博&lt;/a&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;私信&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;评论&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;@我&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span>&gt;微博&lt;/a&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;私信&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;评论&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;@我&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span>&gt;微博&lt;/a&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;私信&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;评论&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;&quot;</span>&gt;@我&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> nav = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.nav&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> lis = nav.children; <span class="comment">// 得到4个小li</span></span><br><span class="line">        <span class="comment">// 2.循环注册事件</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">            lis[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.children[<span class="number">1</span>].style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lis[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.children[<span class="number">1</span>].style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 12 - 简易发布留言</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\fbal.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        body &#123;</span><br><span class="line">            padding: <span class="number">100</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        textarea &#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">100</span>px;</span><br><span class="line">            border: <span class="number">1</span>px solid pink;</span><br><span class="line">            outline: none;</span><br><span class="line">            resize: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ul &#123;</span><br><span class="line">            margin-top: <span class="number">50</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            width: <span class="number">300</span>px;</span><br><span class="line">            padding: <span class="number">5</span>px;</span><br><span class="line">            background-color: rgb(<span class="number">245</span>, <span class="number">209</span>, <span class="number">243</span>);</span><br><span class="line">            color: red;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">            margin: <span class="number">15</span>px <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;textarea name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span>&gt;&lt;/textarea&gt;</span><br><span class="line">    &lt;button&gt;发布&lt;/button&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> text = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;textarea&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 注册事件</span></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (text.value == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                alert(<span class="string">&#x27;您没有输入内容&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// console.log(text.value);</span></span><br><span class="line">                <span class="comment">// (1) 创建元素</span></span><br><span class="line">                <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">                <span class="comment">// 先有li 才能赋值</span></span><br><span class="line">                li.innerHTML = text.value;</span><br><span class="line">                <span class="comment">// (2) 添加元素</span></span><br><span class="line">                <span class="comment">// ul.appendChild(li);</span></span><br><span class="line">                ul.insertBefore(li, ul.children[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 12 - 动态生成表格</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\dtbg.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        table &#123;</span><br><span class="line">            width: <span class="number">500</span>px;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line">            border-collapse: collapse;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        td,</span><br><span class="line">        th &#123;</span><br><span class="line">            border: 1px solid #333;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        thead tr &#123;</span><br><span class="line">            height: <span class="number">40</span>px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;table cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;科目&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;成绩&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1.先去准备好学生的数据</span></span><br><span class="line">        <span class="keyword">var</span> datas = [&#123;</span><br><span class="line">            name: <span class="string">&#x27;魏璎珞&#x27;</span>,</span><br><span class="line">            subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">            score: <span class="number">100</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: <span class="string">&#x27;弘历&#x27;</span>,</span><br><span class="line">            subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">            score: <span class="number">98</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: <span class="string">&#x27;傅恒&#x27;</span>,</span><br><span class="line">            subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">            score: <span class="number">99</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: <span class="string">&#x27;明玉&#x27;</span>,</span><br><span class="line">            subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">            score: <span class="number">88</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: <span class="string">&#x27;大猪蹄子&#x27;</span>,</span><br><span class="line">            subject: <span class="string">&#x27;JavaScript&#x27;</span>,</span><br><span class="line">            score: <span class="number">0</span></span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="comment">// 2. 往tbody 里面创建行： 有几个人（通过数组的长度）我们就创建几行</span></span><br><span class="line">        <span class="keyword">var</span> tbody = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;tbody&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; datas.length; i++) &#123; <span class="comment">// 外面的for循环管行 tr</span></span><br><span class="line">            <span class="comment">// 1. 创建 tr行</span></span><br><span class="line">            <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            tbody.appendChild(tr);</span><br><span class="line">            <span class="comment">// 2. 行里面创建单元格(跟数据有关系的3个单元格) td 单元格的数量取决于每个对象里面的属性个数  for循环遍历对象 datas[i]</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> datas[i]) &#123; <span class="comment">// 里面的for循环管列 td</span></span><br><span class="line">                <span class="comment">// 创建单元格 </span></span><br><span class="line">                <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">                <span class="comment">// 把对象里面的属性值 datas[i][k] 给 td  </span></span><br><span class="line">                <span class="comment">// console.log(datas[i][k]);</span></span><br><span class="line">                td.innerHTML = datas[i][k];</span><br><span class="line">                tr.appendChild(td);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 3. 创建有删除2个字的单元格 </span></span><br><span class="line">            <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            td.innerHTML = <span class="string">&#x27;&lt;a href=&quot;javascript:;&quot;&gt;删除 &lt;/a&gt;&#x27;</span>;</span><br><span class="line">            tr.appendChild(td);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4. 删除操作 开始 </span></span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">as</span> = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">as</span>.length; i++) &#123;</span><br><span class="line">            <span class="keyword">as</span>[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 点击a 删除 当前a 所在的行(链接的爸爸的爸爸)  node.removeChild(child)  </span></span><br><span class="line">                tbody.removeChild(<span class="built_in">this</span>.parentNode.parentNode)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// for(var k in obj) &#123;</span></span><br><span class="line">        <span class="comment">//     k 得到的是属性名</span></span><br><span class="line">        <span class="comment">//     obj[k] 得到是属性值</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h5 id="2-7、顶级对象"><a href="#2-7、顶级对象" class="headerlink" title="2.7、顶级对象"></a>2.7、顶级对象</h5><blockquote>
<p>DOM：document</p>
<p>BOM：window</p>
</blockquote>
<h5 id="2-8、window-对象常见事件"><a href="#2-8、window-对象常见事件" class="headerlink" title="2.8、window 对象常见事件"></a>2.8、window 对象常见事件</h5><ul>
<li><p>页面（窗口）加载事件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 形式 1 : window.onload = function() &#123;&#125;</span></span><br><span class="line"><span class="comment"> * 形式 2 : window.addEventListener(&quot;load&quot;, function() &#123;&#125;)</span></span><br><span class="line"><span class="comment"> * 说明: 窗口 (页面）加载事件，当文档内容完全加载完成会触发该事件, 就调用处理函数</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 形式 3 : window.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123;&#125;)</span></span><br><span class="line"><span class="comment"> * 说明: 窗口 (页面）加载事件，当文档内容不完全加载完成会触发该事件, 就调用处理函数</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// window.onload = function() &#123;</span></span><br><span class="line">        <span class="comment">//     var btn = document.querySelector(&#x27;button&#x27;);</span></span><br><span class="line">        <span class="comment">//     btn.addEventListener(&#x27;click&#x27;, function() &#123;</span></span><br><span class="line">        <span class="comment">//         alert(&#x27;点击我&#x27;);</span></span><br><span class="line">        <span class="comment">//     &#125;)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// window.onload = function() &#123;</span></span><br><span class="line">        <span class="comment">//     alert(22);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">            btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">&#x27;点击我&#x27;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">            alert(<span class="number">22</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="number">33</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">// load 等页面内容全部加载完毕，包含页面dom元素 图片 flash  css 等等</span></span><br><span class="line">            <span class="comment">// DOMContentLoaded 是DOM 加载完毕，不包含图片 falsh css 等就可以执行 加载速度比 load更快一些</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>调整窗口大小事件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 形式 1 : window.onresize = function() &#123;&#125;</span></span><br><span class="line"><span class="comment"> * 形式 2 : window.addEventListener(&quot;resize&quot;, function() &#123;&#125;)</span></span><br><span class="line"><span class="comment"> * 说明: 调整窗口大小加载事件，当触发时就调用的处理函数</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">            <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">window</span>.innerWidth);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;变化了&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">window</span>.innerWidth &lt;= <span class="number">800</span>) &#123;</span><br><span class="line">                    div.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    div.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="2-9、定时器"><a href="#2-9、定时器" class="headerlink" title="2.9、定时器"></a>2.9、定时器</h5><p>回调函数：简单理解，就是过一会才会调用（回头再调用）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置: setTimeout(回调函数, [间隔的毫秒数]) </span></span><br><span class="line"><span class="comment"> * 执行次数: 一次</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. setTimeout </span></span><br><span class="line">        <span class="comment">// 语法规范: window.setTimeout(调用函数, 延时时间);</span></span><br><span class="line">        <span class="comment">// 1. 这个 window 在调用的时候可以省略</span></span><br><span class="line">        <span class="comment">// 2. 这个延时时间单位是毫秒 但是可以省略，如果省略默认的是 0</span></span><br><span class="line">        <span class="comment">// 3. 这个调用函数可以直接写函数 还可以写 函数名 还有一个写法 &#x27;函数名()&#x27;</span></span><br><span class="line">        <span class="comment">// 4. 页面中可能有很多的定时器，我们经常给定时器加标识符 （名字)</span></span><br><span class="line">        <span class="comment">// setTimeout(function() &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(&#x27;时间到了&#x27;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#125;, 2000);</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;爆炸了&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> timer1 = <span class="built_in">setTimeout</span>(callback, <span class="number">3000</span>);</span><br><span class="line">        <span class="keyword">var</span> timer2 = <span class="built_in">setTimeout</span>(callback, <span class="number">5000</span>);</span><br><span class="line">        <span class="comment">// setTimeout(&#x27;callback()&#x27;, 3000); // 我们不提倡这个写法</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 停止: clearTimeout(&#x27;定时器名称&#x27;)</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击停止定时器&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;爆炸了&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;, <span class="number">5000</span>);</span><br><span class="line">        btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置: setInterval(回调函数, [间隔的毫秒数]) </span></span><br><span class="line"><span class="comment"> * 执行次数: 多次（反复）</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;继续输出&#x27;</span>);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 停止: clearInterval(&#x27;定时器名称&#x27;)</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;begin&quot;</span>&gt;开启定时器&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;stop&quot;</span>&gt;停止定时器&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> begin = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.begin&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> stop = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.stop&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> timer = <span class="literal">null</span>; <span class="comment">// 全局变量  null是一个空对象</span></span><br><span class="line">        begin.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;ni hao ma&#x27;</span>);</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        stop.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<h5 id="2-10、this"><a href="#2-10、this" class="headerlink" title="2.10、this"></a>2.10、this</h5><blockquote>
<p>指向问题</p>
</blockquote>
<blockquote>
<p>1、全局作用域或者普通函数中：this -&gt; window</p>
<p>2、定时器：this -&gt; window</p>
<p>3、方法调用中：this -&gt; 调用者</p>
<p>4、构造函数中：this -&gt; 构造函数的实例</p>
</blockquote>
<h5 id="2-11、location-对象"><a href="#2-11、location-对象" class="headerlink" title="2.11、location 对象"></a>2.11、location 对象</h5><p>作用：用于获取或设置窗体的 URL，并且可以解析 URL</p>
<p>主要属性：href（返回整个 URL）, search（返回参数）</p>
<p>常见方法</p>
<ul>
<li>页面跳转（重定向），可回退页面: location.assign(‘页面地址’)</li>
<li>页面跳转（重定向），不可回退页面: location.replace(‘页面地址’)</li>
<li>页面刷新: location.reload()，若带参数 true，则为强制刷新</li>
</ul>
<h5 id="2-12、navigator-对象"><a href="#2-12、navigator-对象" class="headerlink" title="2.12、navigator 对象"></a>2.12、navigator 对象</h5><p>作用：包含有关浏览器的信息，借此可以判断用户那个终端打开页面，实现跳转</p>
<p>最常用属性：userAgent，可以返回由客户机发送服务器的 user-agent 头部的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 判断用户那个终端打开页面，实现跳转</span></span><br><span class="line"><span class="keyword">if</span>((navigator.userAgent.match(<span class="regexp">/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i</span>))) &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href = <span class="string">&quot;&quot;</span>;     <span class="comment">//手机</span></span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href = <span class="string">&quot;&quot;</span>;     <span class="comment">//电脑</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-13、元素偏移量-offset"><a href="#2-13、元素偏移量-offset" class="headerlink" title="2.13、元素偏移量 offset"></a>2.13、元素偏移量 offset</h5><ul>
<li><p>作用：<strong>动态</strong>的得到该元素的位置（偏移）、大小（宽度高度）等</p>
</li>
<li><p>注意：返回的数值都不带单位</p>
</li>
<li><p>常用属性</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\图片1.png"></p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\图片2.png"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;father&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;son&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;w&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// offset 系列</span></span><br><span class="line">        <span class="keyword">var</span> father = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.father&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> son = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.son&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1. 可以得到元素的偏移，位置，返回的不带单位的数值  </span></span><br><span class="line">        <span class="built_in">console</span>.log(father.offsetTop);</span><br><span class="line">        <span class="built_in">console</span>.log(father.offsetLeft);</span><br><span class="line">        <span class="comment">// 它以带有定位的父亲为准，如果没有父亲或者父亲没有定位，则以 body 为准</span></span><br><span class="line">        <span class="built_in">console</span>.log(son.offsetLeft);</span><br><span class="line">        <span class="keyword">var</span> w = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.w&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 可以得到元素的大小，宽度和高度，是包含 padding + border + width </span></span><br><span class="line">        <span class="built_in">console</span>.log(w.offsetWidth);</span><br><span class="line">        <span class="built_in">console</span>.log(w.offsetHeight);</span><br><span class="line">        <span class="comment">// 3. 返回带有定位的父亲，否则返回的是 body</span></span><br><span class="line">        <span class="built_in">console</span>.log(son.offsetParent); <span class="comment">// 返回带有定位的父亲 否则返回的是body</span></span><br><span class="line">        <span class="built_in">console</span>.log(son.parentNode); <span class="comment">// 返回父亲，是最近一级的父亲: 亲爸爸，不管父亲有没有定位</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>offset 与 style 的区别</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * offset</span></span><br><span class="line"><span class="comment"> * 1、offset 可以得到任意样式表中的样式值</span></span><br><span class="line"><span class="comment"> * 2、offset 系列获得的数值是没有单位的</span></span><br><span class="line"><span class="comment"> * 3、offsetWidth 包含 padding+border+width</span></span><br><span class="line"><span class="comment"> * 4、offsetWidth 等属性是只读属性，只能获取不能赋值</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * style</span></span><br><span class="line"><span class="comment"> * 1、style 只能得到行内样式表中的样式值</span></span><br><span class="line"><span class="comment"> * 2、style.width 获得的是带有单位的字符串</span></span><br><span class="line"><span class="comment"> * 3、style.width 获得不包含 padding 和 border 的值</span></span><br><span class="line"><span class="comment"> * 4、style.width 是可读写属性，可以获取也可以赋值</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 总结: 想要获取元素大小位置，用 offset 更合适，想要给元素更改值，则需要用 style 改变</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="2-14、元素可视区-client"><a href="#2-14、元素可视区-client" class="headerlink" title="2.14、元素可视区 client"></a>2.14、元素可视区 client</h5><ul>
<li><p>作用：<strong>动态</strong>的得到该元素的边框大小、元素大小</p>
</li>
<li><p>注意：返回的数值都不带单位</p>
</li>
<li><p>常用属性</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\图片3.png"></p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\图片4.png"></p>
</li>
</ul>
<h5 id="2-15、元素滚动-scroll"><a href="#2-15、元素滚动-scroll" class="headerlink" title="2.15、元素滚动 scroll"></a>2.15、元素滚动 scroll</h5><ul>
<li><p>作用：<strong>动态</strong>的得到该元素的大小、滚动距离</p>
</li>
<li><p>注意：返回的数值都不带单位，<strong>自身实际宽高</strong></p>
</li>
<li><p>常用属性</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\图片5.png"></p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\图片6.png"></p>
</li>
</ul>
<h5 id="2-16、offset、client-和-scroll-总结"><a href="#2-16、offset、client-和-scroll-总结" class="headerlink" title="2.16、offset、client 和 scroll 总结"></a>2.16、offset、client 和 scroll 总结</h5><blockquote>
<p>区分记忆技巧：offset -&gt; client  -&gt; scroll，宽高内容，逐个减少</p>
</blockquote>
<ul>
<li>offsetWidth / Height：内容区域的宽高 + padding + 边框</li>
<li>clientWidth / Height：内容区域的宽高 + padding</li>
<li>scrollWidth / Height：内容区域的宽高（内容自身实际）</li>
</ul>
<blockquote>
<p>应用记忆技巧：位置（offset）、大小（client）和 距离（scroll）</p>
</blockquote>
<ul>
<li><p>offsetLeft / top：常用于获取元素的位置</p>
</li>
<li><p>clientWidth / Height：常用于获取元素大小</p>
</li>
<li><p>scrollLeft / top：常用于获取滚动距离</p>
</li>
</ul>
<blockquote>
<p><strong>注意：页面滚动的距离通过 window.pageX（Y）Offset  获得，不要和元素的混淆</strong></p>
</blockquote>
<h5 id="2-17、动画函数封装"><a href="#2-17、动画函数封装" class="headerlink" title="2.17、动画函数封装"></a>2.17、动画函数封装</h5><p>Js 动画原理：通过定时器 setInterval() 不断移动盒子位置</p>
<p>动画实现步骤：</p>
<ul>
<li><p>获得盒子当前位置</p>
</li>
<li><p>让盒子在当前位置加上 1 个移动距离</p>
</li>
<li><p>核心原理：移动距离固定：匀速动画，移动距离不固定且按特定算法：缓动动画</p>
</li>
<li><p>利用定时器不断重复这个操作</p>
</li>
<li><p>加一个结束定时器的条件</p>
</li>
<li><p>注意此元素需要添加定位，才能使用element.style.left</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// js 动画原理</span></span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (div.offsetLeft &gt;= <span class="number">400</span>) &#123;</span><br><span class="line">                <span class="comment">// 停止动画 本质是停止定时器</span></span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 匀速动画为例子</span></span><br><span class="line">            div.style.left = div.offsetLeft + <span class="number">1</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;, <span class="number">30</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单封装</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;span&gt;&lt;/span&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 明确参数及功能</span></span><br><span class="line">        <span class="comment">// 简单动画函数封装obj目标对象 target 目标位置</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (obj.offsetLeft &gt;= target) &#123;</span><br><span class="line">                    <span class="comment">// 停止动画 本质是停止定时器</span></span><br><span class="line">                    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                obj.style.left = obj.offsetLeft + <span class="number">1</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            &#125;, <span class="number">30</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> span = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        <span class="comment">// 调用函数</span></span><br><span class="line">        animate(div, <span class="number">300</span>);</span><br><span class="line">        animate(span, <span class="number">200</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="2-18、各大案例"><a href="#2-18、各大案例" class="headerlink" title="2.18、各大案例"></a>2.18、各大案例</h5><ul>
<li><p>案例 1 ：发送短信计时</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\dsqal.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    手机号码: <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">button</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 按钮点击之后，会禁用 disabled 为true </span><br><span class="line">        // 同时按钮里面的内容会变化， 注意 button 里面的内容通过 innerHTML修改</span><br><span class="line">        // 里面秒数是有变化的，因此需要用到定时器</span><br><span class="line">        // 定义一个变量，在定时器里面，不断递减</span><br><span class="line">        // 如果变量为0 说明到了时间，我们需要停止定时器，并且复原按钮初始状态</span><br><span class="line">        var btn = document.querySelector(&#x27;button&#x27;);</span><br><span class="line">        var time = 3; // 定义剩下的秒数</span><br><span class="line">        btn.addEventListener(&#x27;click&#x27;, function() &#123;</span><br><span class="line">            btn.disabled = true;</span><br><span class="line">            var timer = setInterval(function() &#123;</span><br><span class="line">                if (time == 0) &#123;</span><br><span class="line">                    // 清除定时器和复原按钮</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                    btn.disabled = false;</span><br><span class="line">                    btn.innerHTML = &#x27;发送&#x27;;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    btn.innerHTML = &#x27;还剩下&#x27; + time + &#x27;秒&#x27;;</span><br><span class="line">                    time--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, 1000);</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 2 ：拖动的模态登录框</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\tdmtk.gif"></p>
</li>
<li><p>代码实现</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 案例分析: </span></span><br><span class="line"><span class="comment"> * 1. 点击弹出层， 模态框和遮挡层就会显示出来 display:block;</span></span><br><span class="line"><span class="comment"> * 2. 点击关闭按钮，模态框和遮挡层就会隐藏起来 display:none;</span></span><br><span class="line"><span class="comment"> * 3. 在页面中拖拽的原理: 鼠标按下并且移动，之后松开鼠标，触发事件是鼠标按下 mousedown，鼠标移动mousemove，鼠标松开 mouseup;</span></span><br><span class="line"><span class="comment"> * 4. 拖拽过程: 鼠标移动过程中，获得最新的值赋值给模态框的 left 和 top 值，这样模态框可以跟着鼠标走</span></span><br><span class="line"><span class="comment"> * 5. 鼠标按下触发的事件源是最上面一行，就是 id 为 title</span></span><br><span class="line"><span class="comment"> * 6. 鼠标的坐标 - 鼠标在盒子内的坐标 = 模态框真正的位置</span></span><br><span class="line"><span class="comment"> * 7. 鼠标按下，我们要得到鼠标在盒子的坐标</span></span><br><span class="line"><span class="comment"> * 8. 鼠标移动，就让模态框的坐标设置为: 鼠标坐标 - 盒子坐标即可，注意移动事件写到按下事件里面</span></span><br><span class="line"><span class="comment"> * 9. 鼠标松开，就停止拖拽，就是可以让鼠标移动事件解除</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">&lt;head lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .login-header &#123;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            text-align: center;</span><br><span class="line">            height: <span class="number">30</span>px;</span><br><span class="line">            font-size: <span class="number">24</span>px;</span><br><span class="line">            line-height: <span class="number">30</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ul,li,ol,dl,dt,dd,div,p,span,h1,h2,h3,h4,h5,h6,</span><br><span class="line">        a &#123;</span><br><span class="line">            padding: <span class="number">0</span>px;</span><br><span class="line">            margin: <span class="number">0</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login &#123;</span><br><span class="line">            display: none;</span><br><span class="line">            width: <span class="number">512</span>px;</span><br><span class="line">            height: <span class="number">280</span>px;</span><br><span class="line">            position: fixed;</span><br><span class="line">            border: #ebebeb solid 1px;</span><br><span class="line">            left: <span class="number">50</span>%;</span><br><span class="line">            top: <span class="number">50</span>%;</span><br><span class="line">            background: #ffffff;</span><br><span class="line">            box-shadow: 0px 0px 20px #ddd;</span><br><span class="line">            z-index: <span class="number">9999</span>;</span><br><span class="line">            transform: translate(<span class="number">-50</span>%, <span class="number">-50</span>%);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-title &#123;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            margin: <span class="number">10</span>px <span class="number">0</span>px <span class="number">0</span>px <span class="number">0</span>px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: <span class="number">40</span>px;</span><br><span class="line">            height: <span class="number">40</span>px;</span><br><span class="line">            font-size: <span class="number">18</span>px;</span><br><span class="line">            position: relative;</span><br><span class="line">            cursor: move;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-input-content &#123;</span><br><span class="line">            margin-top: <span class="number">20</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-button &#123;</span><br><span class="line">            width: <span class="number">50</span>%;</span><br><span class="line">            margin: <span class="number">30</span>px auto <span class="number">0</span>px auto;</span><br><span class="line">            line-height: <span class="number">40</span>px;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">            border: #ebebeb 1px solid;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-bg &#123;</span><br><span class="line">            display: none;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: <span class="number">0</span>px;</span><br><span class="line">            left: <span class="number">0</span>px;</span><br><span class="line">            background: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">.3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        a &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            color: #000000;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-button a &#123;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-input input.list-input &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            line-height: <span class="number">35</span>px;</span><br><span class="line">            height: <span class="number">35</span>px;</span><br><span class="line">            width: <span class="number">350</span>px;</span><br><span class="line">            border: #ebebeb 1px solid;</span><br><span class="line">            text-indent: <span class="number">5</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-input &#123;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            margin: <span class="number">0</span>px <span class="number">0</span>px <span class="number">20</span>px <span class="number">0</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-input label &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: <span class="number">90</span>px;</span><br><span class="line">            padding-right: <span class="number">10</span>px;</span><br><span class="line">            text-align: right;</span><br><span class="line">            line-height: <span class="number">35</span>px;</span><br><span class="line">            height: <span class="number">35</span>px;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .login-title span &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            font-size: <span class="number">12</span>px;</span><br><span class="line">            right: <span class="number">-20</span>px;</span><br><span class="line">            top: <span class="number">-30</span>px;</span><br><span class="line">            background: #ffffff;</span><br><span class="line">            border: #ebebeb solid 1px;</span><br><span class="line">            width: <span class="number">40</span>px;</span><br><span class="line">            height: <span class="number">40</span>px;</span><br><span class="line">            border-radius: <span class="number">20</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-header&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>点击，弹出登录框<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;login&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login&quot;</span>&gt;</span><br><span class="line">        &lt;div id=<span class="string">&quot;title&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-title&quot;</span>&gt;登录会员</span><br><span class="line">            &lt;span&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;closeBtn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close-login&quot;</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-input-content&quot;</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-input&quot;</span>&gt;</span><br><span class="line">                &lt;label&gt;用户名：&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;请输入用户名&quot;</span> name=<span class="string">&quot;info[username]&quot;</span> id=<span class="string">&quot;username&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;list-input&quot;</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-input&quot;</span>&gt;</span><br><span class="line">                &lt;label&gt;登录密码：&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请输入登录密码&quot;</span> name=<span class="string">&quot;info[password]&quot;</span> id=<span class="string">&quot;password&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;list-input&quot;</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div id=<span class="string">&quot;loginBtn&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-button&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">id</span>=<span class="string">&quot;login-button-submit&quot;</span>&gt;</span>登录会员<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 遮盖层 --&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;bg&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;login-bg&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1. 获取元素</span></span><br><span class="line">        <span class="keyword">var</span> login = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.login&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> mask = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.login-bg&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> link = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#link&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> closeBtn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#closeBtn&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> title = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#title&#x27;</span>);</span><br><span class="line">        <span class="comment">// 2. 点击弹出层这个链接 link  让mask 和login 显示出来</span></span><br><span class="line">        link.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                mask.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">                login.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">// 3. 点击 closeBtn 就隐藏 mask 和 login </span></span><br><span class="line">        closeBtn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                mask.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                login.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">// 4. 开始拖拽</span></span><br><span class="line">            <span class="comment">// (1) 当我们鼠标按下， 就获得鼠标在盒子内的坐标</span></span><br><span class="line">        title.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> x = e.pageX - login.offsetLeft;</span><br><span class="line">            <span class="keyword">var</span> y = e.pageY - login.offsetTop;</span><br><span class="line">            <span class="comment">// (2) 鼠标移动的时候，把鼠标在页面中的坐标，减去 鼠标在盒子内的坐标就是模态框的left和top值</span></span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, move)</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                login.style.left = e.pageX - x + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">                login.style.top = e.pageY - y + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// (3) 鼠标弹起，就让鼠标移动事件移除</span></span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mouseup&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mousemove&#x27;</span>, move);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>案例 3 ：仿京东商品放大镜效果</p>
</li>
<li><p>效果演示</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\fjdfdj.gif"></p>
</li>
<li><p>代码实现</p>
<p><a href="">github 链接</a></p>
</li>
<li><p>案例 4 ：轮播图</p>
</li>
</ul>
<h5 id="2-19、移动端"><a href="#2-19、移动端" class="headerlink" title="2.19、移动端"></a>2.19、移动端</h5><p>移动端特点：兼容性较好，不需要考虑以前 JS 的兼容性问题，可以放心的使用原生 JS 书写效果</p>
<ul>
<li><p>触屏事件：touch</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\touch1.png"></p>
</li>
<li><p>触摸事件对象：TouchEvent</p>
<p><img src="C:\Users\QQ916\Desktop\Web\img\touch2.png"></p>
<p>注意：touches 是同时触摸屏幕的手指数列表，targetTouches 是触摸 DOM 元素的手指数列表，但如果两者侦听的是同一个元素，那么结果是一模一样的，所以 targetTouches 用的多一些</p>
</li>
<li><p>拖动元素</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、touchstart、touchmove、touchend 可以实现拖动元素</span></span><br><span class="line"><span class="comment"> * 2、当前手指的坐标值: targetTouches[0] 里面的 pageX 和 pageY</span></span><br><span class="line"><span class="comment"> * 3、拖动元素三步曲:</span></span><br><span class="line"><span class="comment"> *    (1)、触摸元素 touchstart: 获取手指初始坐标（e.targetTouches[0].pageX / Y），同时获得盒子原来的位置（this.offsetLeft / Top）</span></span><br><span class="line"><span class="comment"> *    (2)、移动手指 touchmove: 计算手指的滑动距离（e.targetTouches[0].pageX / Y - 手指初始坐标），并且移动盒子，移动后盒子的位置: 盒子原来的位置 + 手指的滑动距离</span></span><br><span class="line"><span class="comment"> *    (3)、离开手指 touchend</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意: 手指移动也会触发滚动屏幕所以这里要阻止默认的屏幕滚动 e.preventDefault()</span></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// （1） 触摸元素 touchstart: 获取手指初始坐标，同时获得盒子原来的位置</span></span><br><span class="line">        <span class="comment">// （2） 移动手指 touchmove: 计算手指的滑动距离，并且移动盒子</span></span><br><span class="line">        <span class="comment">// （3） 离开手指 touchend</span></span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> startX = <span class="number">0</span>; <span class="comment">//获取手指初始坐标</span></span><br><span class="line">        <span class="keyword">var</span> startY = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="number">0</span>; <span class="comment">//获得盒子原来的位置</span></span><br><span class="line">        <span class="keyword">var</span> y = <span class="number">0</span>;</span><br><span class="line">        div.addEventListener(<span class="string">&#x27;touchstart&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="comment">//  获取手指初始坐标</span></span><br><span class="line">            startX = e.targetTouches[<span class="number">0</span>].pageX;</span><br><span class="line">            startY = e.targetTouches[<span class="number">0</span>].pageY;</span><br><span class="line">            x = <span class="built_in">this</span>.offsetLeft;</span><br><span class="line">            y = <span class="built_in">this</span>.offsetTop;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        div.addEventListener(<span class="string">&#x27;touchmove&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="comment">//  计算手指的移动距离： 手指移动之后的坐标减去手指初始的坐标</span></span><br><span class="line">            <span class="keyword">var</span> moveX = e.targetTouches[<span class="number">0</span>].pageX - startX;</span><br><span class="line">            <span class="keyword">var</span> moveY = e.targetTouches[<span class="number">0</span>].pageY - startY;</span><br><span class="line">            <span class="comment">// 移动我们的盒子 盒子原来的位置 + 手指移动的距离</span></span><br><span class="line">            <span class="built_in">this</span>.style.left = x + moveX + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            <span class="built_in">this</span>.style.top = y + moveY + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            e.preventDefault(); <span class="comment">// 阻止屏幕滚动的默认行为</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>click 点击事件 300ms 延时</p>
</li>
<li><p>原因：移动端屏幕双击会缩放(double tap to zoom) 页面</p>
</li>
<li><p>解决方案：</p>
<blockquote>
<p>1、禁用缩放</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;user-scalable=no&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>2、利用 touch事件 自己封装</p>
</blockquote>
<blockquote>
<p>3、使用 fastclick 插件</p>
</blockquote>
</li>
</ul>
<h4 id="3、本地存储"><a href="#3、本地存储" class="headerlink" title="3、本地存储"></a>3、本地存储</h4><blockquote>
<p>特性</p>
</blockquote>
<ul>
<li>数据存储在用户浏览器中</li>
<li>设置、读取方便、甚至页面刷新不丢失数据</li>
<li>容量较大，sessionStorage 约 5M、localStorage 约 20M</li>
<li>只能存储字符串，可以将对象 JSON.stringify() 编码后存储</li>
</ul>
<blockquote>
<p>window.sessionStorage</p>
</blockquote>
<ul>
<li><p>生命周期：关闭浏览器窗口</p>
</li>
<li><p>在同一个窗口（页面）下数据可以共享</p>
</li>
<li><p>以键值对的形式存储使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 存储数据</span></span><br><span class="line">sessionStorage.setItem(key, value)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数据</span></span><br><span class="line">sessionStorage.getItem(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">sessionStorage.removeItem(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空数据（所有都清除掉）</span></span><br><span class="line">sessionStorage.clear()</span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p>window.localStorage</p>
</blockquote>
<ul>
<li><p>生命周期：永久生效，除非手动删除，否则关闭页面也会存在</p>
</li>
<li><p>可以多窗口（页面）共享（同一浏览器可以共享）</p>
</li>
<li><p>以键值对的形式存储使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 存储数据</span></span><br><span class="line"><span class="built_in">localStorage</span>.setItem(key, value)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数据</span></span><br><span class="line"><span class="built_in">localStorage</span>.getItem(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line"><span class="built_in">localStorage</span>.removeItem(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空数据（所有都清除掉）</span></span><br><span class="line"><span class="built_in">localStorage</span>.clear()</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="4、插件推荐"><a href="#4、插件推荐" class="headerlink" title="4、插件推荐"></a>4、插件推荐</h4><ul>
<li>Swiper ：<a href="https://www.swiper.com.cn/">https://www.swiper.com.cn/</a></li>
<li>superslide ：<a href="http://www.superslide2.com/">http://www.superslide2.com/</a></li>
<li>iscroll ：<a href="https://github.com/cubiq/iscroll">https://github.com/cubiq/iscroll</a></li>
<li>移动端视频插件：zy.media.js</li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>学习笔记</tag>
        <tag>前端开发</tag>
      </tags>
  </entry>
</search>
